AbiSpace			pub struct AbiSpace(pub Abi);
Argument			impl Argument 
Argument			pub struct Argument 
Arguments			pub struct Arguments 
AssocItemLink			enum AssocItemLink<'a> 
AssocItemLink			impl<'a> AssocItemLink<'a> 
AssocItemRender			enum AssocItemRender<'a> 
Attributes			impl Attributes 
Attributes			pub struct Attributes 
AttributesExt			impl AttributesExt for [ast::Attribute] 
AttributesExt			pub trait AttributesExt 
AttributesExt for Attributes			impl AttributesExt for Attributes 
BareFunctionDecl			pub struct BareFunctionDecl 
Bomb			    struct Bomb(Arc<Mutex<Vec<u8>>>, Box<Write+Send>);
Cache			impl<'a> Cache 
Cache			pub struct Cache 
Class			impl Class 
Class			pub enum Class 
Classifier			impl<'a> Classifier<'a> 
Classifier			pub struct Classifier<'a> 
Clean			impl Clean<Attributes> for [ast::Attribute] 
Clean			impl Clean<Option<Lifetime>> for ty::RegionKind 
Clean			impl Clean<Option<Visibility>> for hir::Visibility 
Clean			impl Clean<Option<Visibility>> for ty::Visibility 
Clean			impl Clean<VariantStruct> for ::rustc::hir::VariantData 
Clean			impl Clean<Vec<Item>> for doctree::Impl 
Clean			impl Clean<Vec<Item>> for doctree::Import 
Clean			impl Clean<Vec<Item>> for hir::ForeignMod 
Clean			impl<'a, 'tcx> Clean<FnDecl> for (DefId, ty::PolyFnSig<'tcx>) 
Clean			impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,
Clean			impl<'a, A: Copy> Clean<FnDecl> for (&'a hir::FnDecl, A)
Clean			impl<'a> Clean<Arguments> for (&'a [P<hir::Ty>], &'a [Spanned<ast::Name>]) 
Clean			impl<'a> Clean<Arguments> for (&'a [P<hir::Ty>], hir::BodyId) 
Clean			impl<'a> Clean<Method> for (&'a hir::MethodSig, hir::BodyId) 
Clean			impl<'a> Clean<Stability> for &'a attr::Stability 
Clean			impl<'tcx> Clean<Option<Vec<TyParamBound>>> for Substs<'tcx> 
Clean			pub trait Clean<T> 
Clean for CrateNum			impl Clean<ExternalCrate> for CrateNum 
Clean for ast			impl Clean<String> for ast::Name 
Clean for attr			impl Clean<Deprecation> for attr::Deprecation 
Clean for attr			impl Clean<Stability> for attr::Stability 
Clean for doctree			impl Clean<Item> for doctree::Constant 
Clean for doctree			impl Clean<Item> for doctree::DefaultImpl 
Clean for doctree			impl Clean<Item> for doctree::Enum 
Clean for doctree			impl Clean<Item> for doctree::ExternCrate 
Clean for doctree			impl Clean<Item> for doctree::Function 
Clean for doctree			impl Clean<Item> for doctree::Macro 
Clean for doctree			impl Clean<Item> for doctree::Module 
Clean for doctree			impl Clean<Item> for doctree::Static 
Clean for doctree			impl Clean<Item> for doctree::Struct 
Clean for doctree			impl Clean<Item> for doctree::Trait 
Clean for doctree			impl Clean<Item> for doctree::Typedef 
Clean for doctree			impl Clean<Item> for doctree::Union 
Clean for doctree			impl Clean<Item> for doctree::Variant 
Clean for hir			impl Clean<BareFunctionDecl> for hir::BareFnTy 
Clean for hir			impl Clean<FunctionRetTy> for hir::FunctionRetTy 
Clean for hir			impl Clean<Generics> for hir::Generics 
Clean for hir			impl Clean<ImplPolarity> for hir::ImplPolarity 
Clean for hir			impl Clean<Item> for hir::ForeignItem 
Clean for hir			impl Clean<Item> for hir::ImplItem 
Clean for hir			impl Clean<Item> for hir::StructField 
Clean for hir			impl Clean<Item> for hir::TraitItem 
Clean for hir			impl Clean<Lifetime> for hir::Lifetime 
Clean for hir			impl Clean<Lifetime> for hir::LifetimeDef 
Clean for hir			impl Clean<Mutability> for hir::Mutability 
Clean for hir			impl Clean<Path> for hir::Path 
Clean for hir			impl Clean<PathParameters> for hir::PathParameters 
Clean for hir			impl Clean<PathSegment> for hir::PathSegment 
Clean for hir			impl Clean<PolyTrait> for hir::PolyTraitRef 
Clean for hir			impl Clean<TyParam> for hir::TyParam 
Clean for hir			impl Clean<TyParamBound> for hir::TyParamBound 
Clean for hir			impl Clean<Type> for hir::TraitRef 
Clean for hir			impl Clean<Type> for hir::Ty 
Clean for hir			impl Clean<TypeBinding> for hir::TypeBinding 
Clean for hir			impl Clean<VariantKind> for hir::VariantData 
Clean for hir			impl Clean<WherePredicate> for hir::WherePredicate 
Clean for syntax_pos			impl Clean<Span> for syntax_pos::Span 
Clean for ty			impl Clean<Lifetime> for ty::RegionParameterDef 
Clean for ty			impl<'a> Clean<WherePredicate> for ty::Predicate<'a> 
Clean for ty			impl<'a> Clean<WherePredicate> for ty::TraitPredicate<'a> 
Clean for ty			impl<'tcx> Clean<Item> for ty::AssociatedItem 
Clean for ty			impl<'tcx> Clean<Item> for ty::FieldDef 
Clean for ty			impl<'tcx> Clean<Item> for ty::VariantDef 
Clean for ty			impl<'tcx> Clean<TyParam> for ty::TypeParameterDef 
Clean for ty			impl<'tcx> Clean<TyParamBound> for ty::TraitRef<'tcx> 
Clean for ty			impl<'tcx> Clean<Type> for ty::ProjectionTy<'tcx> 
Clean for ty			impl<'tcx> Clean<Type> for ty::Ty<'tcx> 
Clean for ty			impl<'tcx> Clean<WherePredicate> for ty::EquatePredicate<'tcx> 
Clean for ty			impl<'tcx> Clean<WherePredicate> for ty::OutlivesPredicate<ty::Region<'tcx>, ty::Region<'tcx>> 
Clean for ty			impl<'tcx> Clean<WherePredicate> for ty::OutlivesPredicate<ty::Ty<'tcx>, ty::Region<'tcx>> 
Clean for ty			impl<'tcx> Clean<WherePredicate> for ty::ProjectionPredicate<'tcx> 
Clean for ty			impl<'tcx> Clean<WherePredicate> for ty::SubtypePredicate<'tcx> 
Clean for ty			impl<T, U> Clean<U> for ty::Binder<T> where T: Clean<U> 
Clean for visit_ast			impl<'a, 'tcx> Clean<Crate> for visit_ast::RustdocVisitor<'a, 'tcx> 
CodeBlocks			struct CodeBlocks<'a, I: Iterator<Item = Event<'a>>> 
Collapser			struct Collapser;
Collector			impl Collector 
Collector			pub struct Collector 
CommaSep			pub struct CommaSep<'a, T: 'a>(pub &'a [T]);
CommentCleaner			struct CommentCleaner;
Constant			pub struct Constant 
Constant			pub struct Constant 
ConstnessSpace			impl ConstnessSpace 
ConstnessSpace			pub struct ConstnessSpace(pub hir::Constness);
Context			impl Context 
Context			pub struct Context 
Crate			pub struct Crate 
DefaultImpl			pub struct DefaultImpl 
DefaultImpl			pub struct DefaultImpl 
Deprecation			pub struct Deprecation 
Display for Error			impl Display for Error 
DocAccessLevels			pub trait DocAccessLevels 
DocAccessLevels for AccessLevels			impl DocAccessLevels for AccessLevels<DefId> 
DocContext			impl<'a, 'tcx> DocContext<'a, 'tcx> 
DocContext			pub struct DocContext<'a, 'tcx: 'a> 
DocFolder			pub trait DocFolder : Sized 
DocFolder for Cache			impl DocFolder for Cache 
DocFolder for SourceCollector			impl<'a> DocFolder for SourceCollector<'a> 
Drop for Bomb			    impl Drop for Bomb 
Enum			pub struct Enum 
Enum			pub struct Enum 
Error			impl Error 
Error			pub struct Error 
Escape			pub struct Escape<'a>(pub &'a str);
ExternCrate			pub struct ExternCrate 
ExternalCrate			pub struct ExternalCrate 
ExternalHtml			impl ExternalHtml 
ExternalHtml			pub struct ExternalHtml
ExternalLocation			pub enum ExternalLocation 
FnDecl			impl FnDecl 
FnDecl			pub struct FnDecl 
FoldItem			impl FoldItem 
FoldItem			pub enum FoldItem 
Footnotes			struct Footnotes<'a, I: Iterator<Item = Event<'a>>> 
From for ItemType			impl From<clean::TypeKind> for ItemType 
From for ItemType			impl<'a> From<&'a clean::Item> for ItemType 
From for PrimitiveType			impl From<ast::FloatTy> for PrimitiveType 
From for PrimitiveType			impl From<ast::IntTy> for PrimitiveType 
From for PrimitiveType			impl From<ast::UintTy> for PrimitiveType 
Function			pub struct Function 
Function			pub struct Function 
FunctionRetTy			pub enum FunctionRetTy 
Generics			pub struct Generics 
GetDefId			pub trait GetDefId 
GetDefId for Option			impl<T: GetDefId> GetDefId for Option<T> 
GetDefId for Type			impl GetDefId for Type 
HRef			impl<'a> HRef<'a> 
HRef			pub struct HRef<'a> 
HeadingLinks			struct HeadingLinks<'a, 'b, I: Iterator<Item = Event<'a>>> 
HirCollector			impl<'a, 'hir> HirCollector<'a, 'hir> 
HirCollector			struct HirCollector<'a, 'hir: 'a> 
Impl			pub struct Impl 
Impl			pub struct Impl 
Impl			impl Impl 
Impl			pub struct Impl 
ImplPolarity			pub enum ImplPolarity 
ImplStripper			struct ImplStripper<'a> 
Implementor			pub struct Implementor 
Import			pub enum Import 
Import			pub struct Import 
ImportSource			pub struct ImportSource 
ImportStripper			struct ImportStripper;
IndexItem			struct IndexItem 
IndexItemFunctionType			struct IndexItemFunctionType 
Initializer			struct Initializer<'a>(&'a str);
InlinedConst			struct InlinedConst 
Item			impl Item 
Item			pub struct Item 
Item			impl<'a> Item<'a> 
Item			struct Item<'a> 
ItemEnum			impl ItemEnum 
ItemEnum			pub enum ItemEnum 
ItemType			impl ItemType 
ItemType			pub enum ItemType 
Iterator for ListAttributesIter			impl<'a> Iterator for ListAttributesIter<'a> 
Iterator for ParserWrapper			    impl<'a> Iterator for ParserWrapper<'a> 
LangString			impl LangString 
LangString			struct LangString 
Layout			pub struct Layout 
LibEmbargoVisitor			impl<'a, 'b, 'tcx> LibEmbargoVisitor<'a, 'b, 'tcx> 
LibEmbargoVisitor			pub struct LibEmbargoVisitor<'a, 'b: 'a, 'tcx: 'b> 
Lifetime			impl Lifetime 
Lifetime			pub struct Lifetime(String);
Line			enum Line<'a> 
Line			impl<'a> Line<'a> 
ListAttributesIter			pub struct ListAttributesIter<'a> 
LoadStringError			pub enum LoadStringError 
Macro			pub struct Macro 
Macro			pub struct Macro 
Markdown			pub struct Markdown<'a>(pub &'a str, pub RenderType);
MarkdownHtml			pub struct MarkdownHtml<'a>(pub &'a str, pub RenderType);
MarkdownSummaryLine			pub struct MarkdownSummaryLine<'a>(pub &'a str);
MarkdownWithToc			pub struct MarkdownWithToc<'a>(pub &'a str, pub RenderType);
Method			pub struct Method 
Method			pub struct Method<'a> 
Module			pub struct Module 
Module			impl Module 
Module			pub struct Module 
Mutability			pub enum Mutability 
MutableSpace			pub struct MutableSpace(pub clean::Mutability);
MyOpaque			struct MyOpaque 
NameSpace			impl NameSpace 
NameSpace			pub enum NameSpace 
NestedAttributesExt			pub trait NestedAttributesExt 
Output			struct Output 
Page			pub struct Page<'a> 
ParserWrapper			    struct ParserWrapper<'a> 
Path			impl Path 
Path			pub struct Path 
PathParameters			pub enum PathParameters 
PathSegment			pub struct PathSegment 
PluginManager			impl PluginManager 
PluginManager			pub struct PluginManager 
PolyTrait			pub struct PolyTrait 
PrimitiveType			impl PrimitiveType 
PrimitiveType			pub enum PrimitiveType 
RawMutableSpace			pub struct RawMutableSpace(pub clean::Mutability);
RenderInfo			pub struct RenderInfo 
RenderMode			enum RenderMode 
RenderType			pub enum RenderType 
RustdocVisitor			impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> 
RustdocVisitor			pub struct RustdocVisitor<'a, 'tcx: 'a> 
SelfTy			pub enum SelfTy 
SharedContext			pub struct SharedContext 
Sidebar			struct Sidebar<'a> { cx: &'a Context, item: &'a clean::Item, }
Sink			    struct Sink(Arc<Mutex<Vec<u8>>>);
Source			struct Source<'a>(&'a str);
SourceCollector			impl<'a> SourceCollector<'a> 
SourceCollector			struct SourceCollector<'a> 
Span			impl Span 
Span			pub struct Span 
Stability			pub struct Stability 
Static			pub struct Static 
Static			pub struct Static 
Stripper			struct Stripper<'a> 
Stripper			struct Stripper<'a> 
Struct			pub struct Struct 
Struct			pub struct Struct 
StructType			pub enum StructType 
SummaryLine			struct SummaryLine<'a, I: Iterator<Item = Event<'a>>> 
TY_PRIMITIVE	/data/Code/src/rust/src/librustdoc/html/static/main.js	    var TY_PRIMITIVE = itemTypes.indexOf("primitive");
TestOptions			pub struct TestOptions 
ToJson for IndexItem			impl ToJson for IndexItem 
ToJson for IndexItemFunctionType			impl ToJson for IndexItemFunctionType 
ToJson for Type			impl ToJson for Type 
ToSource			trait ToSource 
ToSource for syntax_pos			impl ToSource for syntax_pos::Span 
Toc			impl Toc 
Toc			pub struct Toc 
TocBuilder			impl TocBuilder 
TocBuilder			pub struct TocBuilder 
TocEntry			pub struct TocEntry 
Trait			pub struct Trait 
Trait			pub struct Trait 
TyMethod			pub struct TyMethod 
TyParam			pub struct TyParam 
TyParamBound			impl TyParamBound 
TyParamBound			pub enum TyParamBound 
TyParamBounds			pub struct TyParamBounds<'a>(pub &'a [clean::TyParamBound]);
Type			impl Type 
Type			pub enum Type 
Type			struct Type 
TypeBinding			pub struct TypeBinding 
TypeBound			pub enum TypeBound 
TypeKind			pub enum TypeKind 
Typedef			pub struct Typedef 
Typedef			pub struct Typedef 
Union			pub struct Union 
Union			pub struct Union 
UnsafetySpace			impl UnsafetySpace 
UnsafetySpace			pub struct UnsafetySpace(pub hir::Unsafety);
Variant			pub struct Variant 
Variant			pub struct Variant 
VariantKind			pub enum VariantKind 
VariantStruct			pub struct VariantStruct 
VisSpace			impl<'a> VisSpace<'a> 
VisSpace			pub struct VisSpace<'a>(pub &'a Option<clean::Visibility>);
Visibility			pub enum Visibility 
WhereClause			pub struct WhereClause<'a>
WherePredicate			pub enum WherePredicate 
Write for Sink			    impl Write for Sink 
Writer			pub trait Writer 
Writer for U			impl<U: Write> Writer for U 
acquire_input			fn acquire_input<R, F>(input: &str,
addClass	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function addClass(elem, className) 
add_old_test			    pub fn add_old_test(&mut self, test: String, filename: String) 
add_plugin			    pub fn add_plugin(&mut self, plugin: PluginCallback) 
add_test			    pub fn add_test(&mut self, test: String,
all_false			    fn all_false() -> LangString 
anchor			    fn anchor(&self, id: &'a String) -> Self 
as_bytes			    fn as_bytes(&self) -> &[u8] 
as_str			    pub fn as_str(&self) -> &'static str 
assoc_const			fn assoc_const(w: &mut fmt::Formatter,
assoc_type			fn assoc_type(w: &mut fmt::Formatter, it: &clean::Item,
block			    extern fn block(_ob: *mut hoedown_buffer,
block			    extern fn block(ob: *mut hoedown_buffer, orig_text: *const hoedown_buffer,
browserSupportsHistoryApi	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function browserSupportsHistoryApi() 
build_const			fn build_const(cx: &DocContext, did: DefId) -> clean::Constant 
build_deref_target_impls			fn build_deref_target_impls(cx: &DocContext,
build_enum			fn build_enum(cx: &DocContext, did: DefId) -> clean::Enum 
build_external_function			fn build_external_function(cx: &DocContext, did: DefId) -> clean::Function 
build_external_trait			pub fn build_external_trait(cx: &DocContext, did: DefId) -> clean::Trait 
build_impl			pub fn build_impl(cx: &DocContext, did: DefId, ret: &mut Vec<clean::Item>) 
build_impls			pub fn build_impls(cx: &DocContext, did: DefId) -> Vec<clean::Item> 
build_index			fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String 
build_module			fn build_module(cx: &DocContext, did: DefId) -> clean::Module 
build_sidebar_items			    fn build_sidebar_items(&self, m: &clean::Module) -> BTreeMap<String, Vec<NameDoc>> 
build_static			fn build_static(cx: &DocContext, did: DefId, mutable: bool) -> clean::Static 
build_struct			fn build_struct(cx: &DocContext, did: DefId) -> clean::Struct 
build_type_alias			fn build_type_alias(cx: &DocContext, did: DefId) -> clean::Typedef 
build_union			fn build_union(cx: &DocContext, did: DefId) -> clean::Union 
builder_smoke			    fn builder_smoke() 
cache			pub fn cache() -> Arc<Cache> 
clean			    fn clean(&self, _: &DocContext) -> Deprecation 
clean			    fn clean(&self, _: &DocContext) -> ImplPolarity 
clean			    fn clean(&self, _: &DocContext) -> Lifetime 
clean			    fn clean(&self, _: &DocContext) -> Mutability 
clean			    fn clean(&self, _: &DocContext) -> Option<Visibility> 
clean			    fn clean(&self, _: &DocContext) -> Stability 
clean			    fn clean(&self, _: &DocContext) -> String 
clean			    fn clean(&self, _cx: &DocContext) -> Attributes 
clean			    fn clean(&self, _cx: &DocContext) -> WherePredicate 
clean			    fn clean(&self, cx: &DocContext) -> Arguments 
clean			    fn clean(&self, cx: &DocContext) -> BareFunctionDecl 
clean			    fn clean(&self, cx: &DocContext) -> Crate 
clean			    fn clean(&self, cx: &DocContext) -> ExternalCrate 
clean			    fn clean(&self, cx: &DocContext) -> FnDecl 
clean			    fn clean(&self, cx: &DocContext) -> FunctionRetTy 
clean			    fn clean(&self, cx: &DocContext) -> Generics 
clean			    fn clean(&self, cx: &DocContext) -> Item 
clean			    fn clean(&self, cx: &DocContext) -> Lifetime 
clean			    fn clean(&self, cx: &DocContext) -> Method 
clean			    fn clean(&self, cx: &DocContext) -> Option<Lifetime> 
clean			    fn clean(&self, cx: &DocContext) -> Option<U> 
clean			    fn clean(&self, cx: &DocContext) -> Option<Vec<TyParamBound>> 
clean			    fn clean(&self, cx: &DocContext) -> Path 
clean			    fn clean(&self, cx: &DocContext) -> PathParameters 
clean			    fn clean(&self, cx: &DocContext) -> PathSegment 
clean			    fn clean(&self, cx: &DocContext) -> PolyTrait 
clean			    fn clean(&self, cx: &DocContext) -> Span 
clean			    fn clean(&self, cx: &DocContext) -> T;
clean			    fn clean(&self, cx: &DocContext) -> TyParam 
clean			    fn clean(&self, cx: &DocContext) -> TyParamBound 
clean			    fn clean(&self, cx: &DocContext) -> Type 
clean			    fn clean(&self, cx: &DocContext) -> TypeBinding 
clean			    fn clean(&self, cx: &DocContext) -> U 
clean			    fn clean(&self, cx: &DocContext) -> VariantKind 
clean			    fn clean(&self, cx: &DocContext) -> VariantStruct 
clean			    fn clean(&self, cx: &DocContext) -> Vec<Item> 
clean			    fn clean(&self, cx: &DocContext) -> Vec<U> 
clean			    fn clean(&self, cx: &DocContext) -> WherePredicate 
clean			    fn clean(&self, dc: &DocContext) -> Stability 
clean			pub mod clean;
clean			impl clean::Attributes 
clean			impl clean::Attributes 
clean_srcpath			fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) where
cmp			    fn cmp(i1: &clean::Item, i2: &clean::Item, idx1: usize, idx2: usize) -> Ordering 
codespan			    extern fn codespan(
collapse_doc_comments			    pub fn collapse_doc_comments(&mut self) 
collapse_docs			pub fn collapse_docs(krate: clean::Crate) -> plugins::PluginResult 
collapse_docs			mod collapse_docs;
collapse_whitespace			fn collapse_whitespace(s: &str) -> String 
collect			    fn collect(path: &Path, krate: &str,
core			pub mod core;
count_entries_with_level			    fn count_entries_with_level(&self, level: u32) -> usize 
css_class			    pub fn css_class(&self) -> &'static str 
def_id			    fn def_id(&self) -> Option<DefId> 
def_id			    fn def_id(&self) -> Option<DefId>;
deprecation			    fn deprecation(&self, id: ast::NodeId) -> Option<attr::Deprecation> 
derive_id			pub fn derive_id(candidate: String) -> String 
description			    fn description(&self) -> &str 
doc_impl_item			    fn doc_impl_item(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item,
doc_value			    pub fn doc_value<'a>(&'a self) -> Option<&'a str> 
doctree			pub mod doctree;
document			fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result 
document.onclick	/data/Code/src/rust/src/librustdoc/html/static/main.js	    document.onclick = function(ev) 
document_full			fn document_full(w: &mut fmt::Formatter, item: &clean::Item,
document_short			fn document_short(w: &mut fmt::Formatter, item: &clean::Item, link: AssocItemLink,
document_stability			fn document_stability(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result 
dont_escape			                    fn dont_escape(c: u8) -> bool 
dont_escape			                fn dont_escape(c: u8) -> bool 
drop			        fn drop(&mut self) 
emit_source			    fn emit_source(&mut self, filename: &str) -> io::Result<()> 
empty			    fn empty() -> Span 
enter_alias			    pub fn enter_alias<F, R>(&self,
enter_span			    fn enter_span(&mut self, _: Class) -> io::Result<()>;
enter_span			    fn enter_span(&mut self, klass: Class) -> io::Result<()> 
error::Error for Error			impl error::Error for Error 
escape			    pub mod escape;
exit_span			    fn exit_span(&mut self) -> io::Result<()> 
exit_span			    fn exit_span(&mut self) -> io::Result<()>;
extern_location			fn extern_location(e: &clean::ExternalCrate, dst: &Path) -> ExternalLocation 
external_path			fn external_path(cx: &DocContext, name: &str, trait_did: Option<DefId>, has_self: bool,
external_path_params			fn external_path_params(cx: &DocContext, trait_did: Option<DefId>, has_self: bool,
externalfiles			pub mod externalfiles;
extract_leading_metadata			fn extract_leading_metadata<'a>(s: &'a str) -> (Vec<&'a str>, &'a str) 
fill_in			    fn fill_in(cx: &DocContext, did: DefId, items: &mut Vec<clean::Item>) 
filter_non_trait_generics			fn filter_non_trait_generics(trait_did: DefId, mut g: clean::Generics)
find_testable_code			pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector, position: Span) 
flush			        fn flush(&mut self) -> io::Result<()> { Ok(()) }
fmt			    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, f: &mut Formatter) -> fmt::Result 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result 
fmt::Debug for Toc			impl fmt::Debug for Toc 
fmt::Display for AbiSpace			impl fmt::Display for AbiSpace 
fmt::Display for CommaSep			impl<'a, T: fmt::Display> fmt::Display for CommaSep<'a, T> 
fmt::Display for ConstnessSpace			impl fmt::Display for ConstnessSpace 
fmt::Display for Escape			impl<'a> fmt::Display for Escape<'a> 
fmt::Display for HRef			impl<'a> fmt::Display for HRef<'a> 
fmt::Display for Initializer			impl<'a> fmt::Display for Initializer<'a> 
fmt::Display for Item			impl<'a> fmt::Display for Item<'a> 
fmt::Display for ItemType			impl fmt::Display for ItemType 
fmt::Display for Markdown			impl<'a> fmt::Display for Markdown<'a> 
fmt::Display for MarkdownHtml			impl<'a> fmt::Display for MarkdownHtml<'a> 
fmt::Display for MarkdownSummaryLine			impl<'a> fmt::Display for MarkdownSummaryLine<'a> 
fmt::Display for MarkdownWithToc			impl<'a> fmt::Display for MarkdownWithToc<'a> 
fmt::Display for Method			impl<'a> fmt::Display for Method<'a> 
fmt::Display for MutableSpace			impl fmt::Display for MutableSpace 
fmt::Display for NameSpace			impl fmt::Display for NameSpace 
fmt::Display for RawMutableSpace			impl fmt::Display for RawMutableSpace 
fmt::Display for Sidebar			impl<'a> fmt::Display for Sidebar<'a> 
fmt::Display for Source			impl<'a> fmt::Display for Source<'a> 
fmt::Display for Toc			impl fmt::Display for Toc 
fmt::Display for TyParamBounds			impl<'a> fmt::Display for TyParamBounds<'a> 
fmt::Display for UnsafetySpace			impl fmt::Display for UnsafetySpace 
fmt::Display for VisSpace			impl<'a> fmt::Display for VisSpace<'a> 
fmt::Display for WhereClause			impl<'a> fmt::Display for WhereClause<'a> 
fmt::Display for clean			impl fmt::Display for clean::Arguments 
fmt::Display for clean			impl fmt::Display for clean::FnDecl 
fmt::Display for clean			impl fmt::Display for clean::FunctionRetTy 
fmt::Display for clean			impl fmt::Display for clean::Generics 
fmt::Display for clean			impl fmt::Display for clean::Impl 
fmt::Display for clean			impl fmt::Display for clean::Import 
fmt::Display for clean			impl fmt::Display for clean::ImportSource 
fmt::Display for clean			impl fmt::Display for clean::Lifetime 
fmt::Display for clean			impl fmt::Display for clean::Path 
fmt::Display for clean			impl fmt::Display for clean::PathParameters 
fmt::Display for clean			impl fmt::Display for clean::PathSegment 
fmt::Display for clean			impl fmt::Display for clean::PolyTrait 
fmt::Display for clean			impl fmt::Display for clean::TyParamBound 
fmt::Display for clean			impl fmt::Display for clean::Type 
fmt::Display for clean			impl fmt::Display for clean::TypeBinding 
fmt_impl			fn fmt_impl(i: &clean::Impl,
fmt_impl_for_trait_page			pub fn fmt_impl_for_trait_page(i: &clean::Impl,
fmt_type			fn fmt_type(t: &clean::Type, f: &mut fmt::Formatter, use_absolute: bool) -> fmt::Result 
focusSearchBar	/data/Code/src/rust/src/librustdoc/html/static/main.js	function focusSearchBar() 
fold			    pub fn fold(self) -> Option<Item> 
fold			pub mod fold;
fold::DocFolder for Collapser			impl fold::DocFolder for Collapser 
fold::DocFolder for CommentCleaner			impl fold::DocFolder for CommentCleaner 
fold::DocFolder for ImplStripper			impl<'a> fold::DocFolder for ImplStripper<'a> 
fold::DocFolder for ImportStripper			impl fold::DocFolder for ImportStripper 
fold::DocFolder for Stripper			impl<'a> fold::DocFolder for Stripper<'a> 
fold::DocFolder for Stripper			impl<'a> fold::DocFolder for Stripper<'a> 
fold_crate			    fn fold_crate(&mut self, mut c: Crate) -> Crate 
fold_inner_recur			    fn fold_inner_recur(&mut self, inner: ItemEnum) -> ItemEnum 
fold_item			    fn fold_item(&mut self, item: Item) -> Option<Item> 
fold_item			    fn fold_item(&mut self, item: clean::Item) -> Option<clean::Item> 
fold_item			    fn fold_item(&mut self, mut i: Item) -> Option<Item> 
fold_item			    fn fold_item(&mut self, i: Item) -> Option<Item> 
fold_item			    fn fold_item(&mut self, i: Item) -> Option<Item> 
fold_item			    fn fold_item(&mut self, mut i: Item) -> Option<Item> 
fold_item_recur			    fn fold_item_recur(&mut self, item: Item) -> Option<Item> 
fold_mod			    fn fold_mod(&mut self, m: Module) -> Module 
fold_until			    fn fold_until(&mut self, level: u32) 
for_code			    fn for_code(self) -> &'a str 
for_html			    fn for_html(self) -> Option<&'a str> 
format			    pub mod format;
from			    fn from(float_ty: ast::FloatTy) -> PrimitiveType 
from			    fn from(int_ty: ast::IntTy) -> PrimitiveType 
from			    fn from(uint_ty: ast::UintTy) -> PrimitiveType 
from			    fn from(item: &'a clean::Item) -> ItemType 
from			    fn from(kind: clean::TypeKind) -> ItemType 
from_ast			    pub fn from_ast(attrs: &[ast::Attribute]) -> Attributes 
from_str			    fn from_str(s: &str) -> Option<PrimitiveType> 
full_path			fn full_path(cx: &Context, item: &clean::Item) -> String 
generate_name			    fn generate_name(&self, line: usize, filename: &str) -> String 
generate_name_beginning			    fn generate_name_beginning(&self, filename: &str) -> String 
generics			    pub fn generics(&self) -> Option<&Generics> 
generics			    fn generics(&mut self, generics: &clean::Generics) 
get			    pub fn get(&self) -> hir::Constness 
get			    pub fn get(&self) -> hir::Unsafety 
get			    pub fn get(self) -> &'a Option<clean::Visibility> 
getQueryStringParams	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function getQueryStringParams() 
getVirtualKey	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function getVirtualKey(ev) 
get_args			fn get_args() -> Option<Vec<String>> 
get_deprecation			fn get_deprecation(cx: &DocContext, def_id: DefId) -> Option<Deprecation> 
get_entry			    fn get_entry(&mut self, key: &str) -> &mut (Vec<Event<'a>>, u16) 
get_filename			    pub fn get_filename(&self) -> String 
get_index_search_type			fn get_index_search_type(item: &clean::Item) -> Option<IndexItemFunctionType> 
get_index_type			fn get_index_type(clean_type: &clean::Type) -> Type 
get_index_type_name			fn get_index_type_name(clean_type: &clean::Type) -> Option<String> 
get_line			    pub fn get_line(&self) -> usize 
get_ref			    pub fn get_ref<'a>(&'a self) -> &'a str 
get_stability			fn get_stability(cx: &DocContext, def_id: DefId) -> Option<Stability> 
handleShortcut	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function handleShortcut(ev) 
hasClass	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function hasClass(elem, className) 
has_self			    pub fn has_self(&self) -> bool 
has_stripped_fields			    pub fn has_stripped_fields(&self) -> Option<bool> 
has_word			    fn has_word(self, word: &str) -> bool 
has_word			    fn has_word(self, word: &str) -> bool;
header			    extern fn header(_ob: *mut hoedown_buffer,
header			    extern fn header(ob: *mut hoedown_buffer, text: *const hoedown_buffer,
highlight			    pub mod highlight;
highlightSourceLines	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function highlightSourceLines(ev) 
hir::print::PpAnn for InlinedConst			impl hir::print::PpAnn for InlinedConst 
hoedown_buffer			impl hoedown_buffer 
hoedown_buffer			struct hoedown_buffer 
hoedown_buffer_free			    fn hoedown_buffer_free(b: *mut hoedown_buffer);
hoedown_buffer_new			    fn hoedown_buffer_new(unit: libc::size_t) -> *mut hoedown_buffer;
hoedown_buffer_puts			    fn hoedown_buffer_puts(b: *mut hoedown_buffer, c: *const libc::c_char);
hoedown_document			enum hoedown_document {}
hoedown_document_free			    fn hoedown_document_free(md: *mut hoedown_document);
hoedown_document_new			    fn hoedown_document_new(rndr: *const hoedown_renderer,
hoedown_document_render			    fn hoedown_document_render(doc: *mut hoedown_document,
hoedown_html_renderer_free			    fn hoedown_html_renderer_free(renderer: *mut hoedown_renderer);
hoedown_html_renderer_new			    fn hoedown_html_renderer_new(render_flags: libc::c_uint,
hoedown_html_renderer_state			struct hoedown_html_renderer_state 
hoedown_renderer			struct hoedown_renderer 
hoedown_renderer_data			struct hoedown_renderer_data 
href			pub fn href(did: DefId) -> Option<(String, ItemType, Vec<String>)> 
html			pub mod html 
html_toc_data			struct html_toc_data 
inherits_doc_hidden			        fn inherits_doc_hidden(cx: &core::DocContext, mut node: ast::NodeId) -> bool 
init_ids			fn init_ids() -> FxHashMap<String, usize> 
inline			pub mod inline;
inner_impl			    fn inner_impl(&self) -> &clean::Impl 
into_toc			    pub fn into_toc(mut self) -> Toc 
intravisit::Visitor for HirCollector			impl<'a, 'hir> intravisit::Visitor<'hir> for HirCollector<'a, 'hir> 
isHidden	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function isHidden(elem) 
is_associated_const			    pub fn is_associated_const(&self) -> bool 
is_associated_type			    pub fn is_associated_type(&self) -> bool 
is_crate			    pub fn is_crate(&self) -> bool 
is_doc_reachable			    fn is_doc_reachable(&self, did: DefId) -> bool 
is_doc_reachable			    fn is_doc_reachable(&self, did: DefId) -> bool;
is_enum			    pub fn is_enum(&self) -> bool 
is_fn			    pub fn is_fn(&self) -> bool 
is_generic			    pub fn is_generic(&self) -> bool 
is_method			    pub fn is_method(&self) -> bool 
is_mod			    pub fn is_mod(&self) -> bool 
is_primitive			    pub fn is_primitive(&self) -> bool 
is_self_type			    pub fn is_self_type(&self) -> bool 
is_sized_bound			    fn is_sized_bound(&self, cx: &DocContext) -> bool 
is_stripped			    pub fn is_stripped(&self) -> bool 
is_struct			    pub fn is_struct(&self) -> bool 
is_trait			    pub fn is_trait(&self) -> bool 
is_ty_method			    pub fn is_ty_method(&self) -> bool 
is_typedef			    pub fn is_typedef(&self) -> bool 
is_union			    pub fn is_union(&self) -> bool 
issue_17736			    fn issue_17736() 
item			    fn item<F>(&mut self, item: clean::Item, mut f: F) -> Result<(), Error> where
itemTypes	/data/Code/src/rust/src/librustdoc/html/static/main.js	    var itemTypes = ["mod",
item_constant			fn item_constant(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_enum			fn item_enum(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_function			fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_macro			fn item_macro(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_module			fn item_module(w: &mut fmt::Formatter, cx: &Context,
item_path			fn item_path(ty: ItemType, name: &str) -> String 
item_primitive			fn item_primitive(w: &mut fmt::Formatter, cx: &Context,
item_static			fn item_static(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_struct			fn item_struct(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_trait			fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_type			    pub mod item_type;
item_typedef			fn item_typedef(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
item_union			fn item_union(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,
krate			    fn krate(self, mut krate: clean::Crate) -> Result<(), Error> 
last_name			    pub fn last_name(&self) -> &str 
layout			    pub mod layout;
libname			fn libname(mut n: String) -> String 
libname			fn libname(n: String) -> String 
lists			    fn lists<'a>(&'a self, name: &'a str) -> ListAttributesIter<'a> 
lists			    fn lists<'a>(&'a self, name: &'a str) -> ListAttributesIter<'a>;
load			    pub fn load(in_header: &[String], before_content: &[String], after_content: &[String],
load_attrs			pub fn load_attrs(cx: &DocContext, did: DefId) -> clean::Attributes 
load_external_files			fn load_external_files(names: &[String]) -> Option<String> 
load_plugin			    pub fn load_plugin(&mut self, name: String) 
load_string			pub fn load_string<P: AsRef<Path>>(file_path: P) -> Result<String, LoadStringError> 
main			fn main() 
main			pub fn main() 
main_args			pub fn main_args(args: &[String]) -> isize 
make_item_keywords			fn make_item_keywords(it: &clean::Item) -> String 
make_test			pub fn make_test(s: &str,
map_line			fn map_line(s: &str) -> Line 
markdown			    pub mod markdown;
markdown			pub mod markdown;
maybe_inline_local			    fn maybe_inline_local(&mut self,
maybe_sized			    fn maybe_sized(cx: &DocContext) -> TyParamBound 
method			    fn method(w: &mut fmt::Formatter,
naive_assoc_href			fn naive_assoc_href(it: &clean::Item, link: AssocItemLink) -> String 
name_from_pat			fn name_from_pat(p: &hir::Pat) -> String 
name_key			fn name_key(name: &str) -> (&str, u64, usize) 
name_space			    pub fn name_space(&self) -> NameSpace 
nested			    fn nested(&self, state: &mut hir::print::State, nested: hir::print::Nested)
nested_visit_map			    fn nested_visit_map<'this>(&'this mut self) -> intravisit::NestedVisitorMap<'this, 'hir> 
new			    pub fn new(name: Option<Name>) -> Module 
new			    pub fn new(did: DefId, text: &'a str) -> HRef<'a> 
new			    pub fn new(lexer: lexer::StringReader<'a>, codemap: &'a CodeMap) -> Classifier<'a> 
new			    fn new(iter: I) -> Self 
new			    fn new(iter: I, toc: Option<&'b mut TocBuilder>) -> Self 
new			    pub fn new(e: io::Error, file: &Path) -> Error 
new			    pub fn new() -> TocBuilder 
new			    pub fn new(prefix: PathBuf) -> PluginManager 
new			    pub fn new(cratename: String, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,
new			    pub fn new(cx: &'a core::DocContext<'a, 'tcx>) -> RustdocVisitor<'a, 'tcx> 
new			    pub fn new(cx: &'a ::core::DocContext<'b, 'tcx>) -> LibEmbargoVisitor<'a, 'b, 'tcx> 
next			    fn next(&mut self) -> Option<Self::Item> 
next			        fn next(&mut self) -> Option<String> 
next			    fn next(&mut self) -> Option<Self::Item> 
old_find_testable_code			pub fn old_find_testable_code(doc: &str, tests: &mut ::test::Collector, position: Span) 
onEach	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function onEach(arr, func) 
opts			pub fn opts() -> Vec<RustcOptGroup> 
parse			    fn parse(string: &str) -> LangString 
parse_externs			fn parse_externs(matches: &getopts::Matches) -> Result<Externs, String> 
partition_source			fn partition_source(s: &str) -> (String, String) 
passes			pub mod passes;
plain_summary_line			pub fn plain_summary_line(md: &str) -> String 
plain_summary_line			fn plain_summary_line(s: Option<&str>) -> String 
plugins			pub mod plugins;
primitive_link			fn primitive_link(f: &mut fmt::Formatter,
primitive_type			    pub fn primitive_type(&self) -> Option<PrimitiveType> 
print_const_expr			fn print_const_expr(cx: &DocContext, body: hir::BodyId) -> String 
print_error			fn print_error<T>(error_message: T) where T: Display 
print_inlined_const			fn print_inlined_const(cx: &DocContext, did: DefId) -> String 
push			    pub fn push<'a>(&'a mut self, level: u32, name: String, id: String) -> &'a str 
qpath_to_string			fn qpath_to_string(p: &hir::QPath) -> String 
record_extern_fqn			pub fn record_extern_fqn(cx: &DocContext, did: DefId, kind: clean::TypeKind) 
recurse			    fn recurse<T, F>(&mut self, s: String, f: F) -> T where
redirect			pub fn redirect(dst: &mut io::Write, url: &str) -> io::Result<()> 
register_def			fn register_def(cx: &DocContext, def: Def) -> DefId 
register_header			    pub fn register_header(&mut self, name: &str, level: u32) 
removeClass	/data/Code/src/rust/src/librustdoc/html/static/main.js	    function removeClass(elem, className) 
render			pub fn render<T: fmt::Display, S: fmt::Display>(
render			pub fn render(w: &mut fmt::Formatter,
render			    pub mod render;
render			pub fn render(input: &str, mut output: PathBuf, matches: &getopts::Matches,
render_assoc_const_value			fn render_assoc_const_value(item: &clean::Item) -> String 
render_assoc_item			fn render_assoc_item(w: &mut fmt::Formatter,
render_assoc_items			fn render_assoc_items(w: &mut fmt::Formatter,
render_attribute			fn render_attribute(attr: &ast::MetaItem) -> Option<String> 
render_attributes			fn render_attributes(w: &mut fmt::Formatter, it: &clean::Item) -> fmt::Result 
render_default_items			    fn render_default_items(w: &mut fmt::Formatter,
render_deref_methods			fn render_deref_methods(w: &mut fmt::Formatter, cx: &Context, impl_: &Impl,
render_impl			fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLink,
render_inner_with_highlighting			pub fn render_inner_with_highlighting(src: &str) -> io::Result<String> 
render_item			    fn render_item(&self,
render_sources			fn render_sources(dst: &Path, scx: &mut SharedContext,
render_stability_since			fn render_stability_since(w: &mut fmt::Formatter,
render_stability_since_raw			fn render_stability_since_raw<'a>(w: &mut fmt::Formatter,
render_struct			fn render_struct(w: &mut fmt::Formatter, it: &clean::Item,
render_union			fn render_union(w: &mut fmt::Formatter, it: &clean::Item,
render_with_highlighting			pub fn render_with_highlighting(src: &str, class: Option<&str>, id: Option<&str>,
reorder			    fn reorder(ty: ItemType) -> u8 
reset_ids			pub fn reset_ids(embedded: bool) 
resolve_type			fn resolve_type(cx: &DocContext,
resolve_use_source			fn resolve_use_source(cx: &DocContext, path: Path) -> ImportSource 
resolved_path			fn resolved_path(w: &mut fmt::Formatter, did: DefId, path: &clean::Path,
root_path			    fn root_path(&self) -> String 
run			pub fn run(mut krate: clean::Crate,
run			pub fn run(input: &str,
run_core			pub fn run_core(search_paths: SearchPaths,
run_plugins			    pub fn run_plugins(&self, mut krate: clean::Crate) -> clean::Crate 
run_test			fn run_test(test: &str, cratename: &str, filename: &str, cfgs: Vec<String>, libs: SearchPaths,
rust_input			fn rust_input<R, F>(cratefile: &str, externs: Externs, matches: &getopts::Matches, f: F) -> R
rustdoc_class			    pub fn rustdoc_class(self) -> &'static str 
scrape_test_config			fn scrape_test_config(krate: &::rustc::hir::Crate) -> TestOptions 
self_type			    pub fn self_type(&self) -> Option<SelfTy> 
separate_supertrait_bounds			fn separate_supertrait_bounds(mut g: clean::Generics)
sess			    pub fn sess(&self) -> &session::Session 
set_fragment	/data/Code/src/rust/src/librustdoc/html/static/main.js	            var set_fragment = function (name) 
set_position			    pub fn set_position(&mut self, position: Span) 
short_stability			fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<String> 
shorter			fn shorter<'a>(s: Option<&'a str>) -> String 
should_ignore_first_line_indent			    fn should_ignore_first_line_indent() 
should_leave_multiple_indent_levels			    fn should_leave_multiple_indent_levels() 
should_not_ignore_first_line_indent_in_a_single_line_para			    fn should_not_ignore_first_line_indent_in_a_single_line_para() 
should_not_trim			    fn should_not_trim() 
should_trim_mixed_indentation			    fn should_trim_mixed_indentation() 
should_unindent			    fn should_unindent() 
should_unindent_multiple_paragraphs			    fn should_unindent_multiple_paragraphs() 
should_unindent_tabs			    fn should_unindent_tabs() 
sidebar_assoc_items			fn sidebar_assoc_items(it: &clean::Item) -> String 
sidebar_enum			fn sidebar_enum(fmt: &mut fmt::Formatter, it: &clean::Item,
sidebar_module			fn sidebar_module(fmt: &mut fmt::Formatter, _it: &clean::Item,
sidebar_primitive			fn sidebar_primitive(fmt: &mut fmt::Formatter, it: &clean::Item,
sidebar_struct			fn sidebar_struct(fmt: &mut fmt::Formatter, it: &clean::Item,
sidebar_trait			fn sidebar_trait(fmt: &mut fmt::Formatter, it: &clean::Item,
sidebar_typedef			fn sidebar_typedef(fmt: &mut fmt::Formatter, it: &clean::Item,
sidebar_union			fn sidebar_union(fmt: &mut fmt::Formatter, it: &clean::Item,
simplify			mod simplify;
singleton			    pub fn singleton(name: String) -> Path 
slugify			fn slugify(c: char) -> Option<char> 
snip			    fn snip(&self, sp: Span) -> String 
src_href			    fn src_href(&self) -> Option<String> 
stability			    fn stability(&self, id: ast::NodeId) -> Option<attr::Stability> 
stability_class			    pub fn stability_class(&self) -> Option<String> 
stable			fn stable<F>(name: &'static str, f: F) -> RustcOptGroup
stable_since			    pub fn stable_since(&self) -> Option<&str> 
statik			    pub fn statik() -> Lifetime 
string			    fn string<T: Display>(&mut self,
strip_hidden			mod strip_hidden;
strip_hidden			pub fn strip_hidden(krate: clean::Crate) -> plugins::PluginResult 
strip_priv_imports			mod strip_priv_imports;
strip_priv_imports			pub fn strip_priv_imports(krate: clean::Crate)  -> plugins::PluginResult 
strip_private			mod strip_private;
strip_private			pub fn strip_private(mut krate: clean::Crate) -> plugins::PluginResult 
struct_type_from_def			pub fn struct_type_from_def(vdata: &hir::VariantData) -> StructType 
t			        fn t(input: &str, expect: &str) 
t			        fn t(s: &str,
test			pub mod test;
test			pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,
tests			mod tests 
tests			mod tests 
to_json			    fn to_json(&self) -> Json 
to_self			    pub fn to_self(&self) -> Option<SelfTy> 
to_src			    fn to_src(&self, cx: &DocContext) -> String 
to_src			    fn to_src(&self, cx: &DocContext) -> String;
to_static_str			    pub fn to_static_str(&self) -> &'static str 
to_url_str			    pub fn to_url_str(&self) -> &'static str 
toc			    pub mod toc;
trait_did			    fn trait_did(&self) -> Option<DefId> 
trait_is_same_or_supertrait			fn trait_is_same_or_supertrait(cx: &DocContext, child: DefId,
trait_item			    fn trait_item(w: &mut fmt::Formatter, cx: &Context, m: &clean::Item, t: &clean::Item)
try_inline			pub fn try_inline(cx: &DocContext, def: Def, name: ast::Name)
ty_bounds			fn ty_bounds(bounds: Vec<clean::TyParamBound>) -> Vec<clean::TyParamBound> 
ty_params			pub fn ty_params(mut params: Vec<clean::TyParam>) -> Vec<clean::TyParam> 
tybounds			fn tybounds(w: &mut fmt::Formatter,
type_			    pub fn type_(&self) -> ItemType 
unindent			fn unindent(s: &str) -> String 
unindent_comments			mod unindent_comments;
unindent_comments			pub fn unindent_comments(krate: clean::Crate) -> plugins::PluginResult 
unindent_doc_comments			    pub fn unindent_doc_comments(&mut self) 
unindent_tests			mod unindent_tests 
unstable			fn unstable<F>(name: &'static str, f: F) -> RustcOptGroup
update			    fn update(&mut self, did: DefId, level: Option<AccessLevel>) -> Option<AccessLevel> 
usage			pub fn usage(argv0: &str) 
v			        fn v() -> Vec<String> 
visit			    pub fn visit(&mut self, krate: &hir::Crate) 
visit_ast			pub mod visit_ast;
visit_enum_def			    pub fn visit_enum_def(&mut self, it: &hir::Item,
visit_fn			    pub fn visit_fn(&mut self, item: &hir::Item,
visit_foreign_item			    fn visit_foreign_item(&mut self, item: &'hir hir::ForeignItem) 
visit_impl_item			    fn visit_impl_item(&mut self, item: &'hir hir::ImplItem) 
visit_item			    fn visit_item(&mut self, item: &'hir hir::Item) 
visit_item			    pub fn visit_item(&mut self, item: &hir::Item,
visit_item			    fn visit_item(&mut self, def: Def) 
visit_lib			pub mod visit_lib;
visit_lib			    pub fn visit_lib(&mut self, cnum: CrateNum) 
visit_local_macro			    fn visit_local_macro(&self, def: &hir::MacroDef) -> Macro 
visit_macro_def			    fn visit_macro_def(&mut self, macro_def: &'hir hir::MacroDef) 
visit_mod			    pub fn visit_mod(&mut self, def_id: DefId) 
visit_mod_contents			    pub fn visit_mod_contents(&mut self, span: Span, attrs: hir::HirVec<ast::Attribute>,
visit_struct_field			    fn visit_struct_field(&mut self, f: &'hir hir::StructField) 
visit_testable			    fn visit_testable<F: FnOnce(&mut Self)>(&mut self,
visit_trait_item			    fn visit_trait_item(&mut self, item: &'hir hir::TraitItem) 
visit_union_data			    pub fn visit_union_data(&mut self, item: &hir::Item,
visit_variant			    fn visit_variant(&mut self,
visit_variant_data			    pub fn visit_variant_data(&mut self, item: &hir::Item,
where_clauses			pub fn where_clauses(cx: &DocContext, clauses: Vec<WP>) -> Vec<WP> 
write			fn write(dst: PathBuf, contents: &[u8]) -> Result<(), Error> 
write			        fn write(&mut self, data: &[u8]) -> io::Result<usize> 
write_footer			fn write_footer(out: &mut Write) -> io::Result<()> 
write_header			fn write_header(class: Option<&str>,
write_shared			fn write_shared(cx: &Context,
write_source			    pub fn write_source<W: Writer>(&mut self,
write_token			    fn write_token<W: Writer>(&mut self,
x	/data/Code/src/rust/src/librustdoc/html/static/main.js	    var x = document.getElementsByClassName('version-selector');
