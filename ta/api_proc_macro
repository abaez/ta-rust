Default for Span			impl Default for Span 
Delimiter			impl Delimiter 
Delimiter			pub enum Delimiter 
Drop for Reset			        impl Drop for Reset 
From for TokenStream			impl From<TokenNode> for TokenStream 
From for TokenStream			impl From<TokenTree> for TokenStream 
From for TokenTree			impl From<TokenNode> for TokenTree 
FromStr for TokenStream			impl FromStr for TokenStream 
IntoIterator for TokenStream			impl IntoIterator for TokenStream 
Iterator for TokenTreeIter			impl Iterator for TokenTreeIter 
LexError			pub struct LexError 
Literal			impl Literal 
Literal			pub struct Literal(token::Token);
ProcMacro for Quoter			impl ProcMacro for Quoter 
Quote			impl<'a> Quote for &'a str 
Quote			pub trait Quote 
Quote for Delimited			impl Quote for Delimited 
Quote for Ident			impl Quote for Ident 
Quote for Lit			impl Quote for Lit 
Quote for Option			impl<T: Quote> Quote for Option<T> 
Quote for Span			impl Quote for Span 
Quote for Symbol			impl Quote for Symbol 
Quote for Token			impl Quote for Token 
Quote for TokenStream			impl Quote for TokenStream 
Quote for TokenTree			impl Quote for TokenTree 
Quote for token			impl Quote for token::BinOpToken 
Quote for token			impl Quote for token::DelimToken 
Quote for usize			impl Quote for usize 
Quoter			pub struct Quoter;
Registry			    pub trait Registry 
Reset			        struct Reset { prev: (*const ParseSess, Mark) }
Spacing			pub enum Spacing 
Span			impl Span 
Span			pub struct Span(syntax_pos::Span);
Term			impl Term 
Term			pub struct Term(Symbol);
TokenNode			pub enum TokenNode 
TokenStream			impl TokenStream 
TokenStream			pub struct TokenStream(tokenstream::TokenStream);
TokenTree			impl TokenTree 
TokenTree			pub struct TokenTree 
TokenTreeIter			pub struct TokenTreeIter 
__internal			pub mod __internal 
__rt			pub mod __rt 
as_str			    pub fn as_str(&self) -> &str 
byte_string			    pub fn byte_string(bytes: &[u8]) -> Literal 
call_site			    pub fn call_site() -> Span 
character			    pub fn character(ch: char) -> Literal 
ctxt			pub fn ctxt() -> SyntaxContext 
default			    fn default() -> Span 
delimit			fn delimit(delim: token::DelimToken, stream: TokenStream) -> TokenStream 
drop			            fn drop(&mut self) 
empty			    pub fn empty() -> TokenStream 
expand			    fn expand<'cx>(&self, cx: &'cx mut ExtCtxt, _: Span, stream: TokenStream) -> TokenStream 
f32			    pub fn f32(n: f32) -> Literal 
f64			    pub fn f64(n: f64) -> Literal 
float			    pub fn float(n: f64) -> Literal 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt::Display for Literal			impl fmt::Display for Literal 
fmt::Display for TokenStream			impl fmt::Display for TokenStream 
fmt::Display for TokenTree			impl fmt::Display for TokenTree 
from			    fn from(kind: TokenNode) -> TokenStream 
from			    fn from(kind: TokenNode) -> TokenTree 
from			    fn from(tree: TokenTree) -> TokenStream 
from_internal			    fn from_internal(delim: token::DelimToken) -> Delimiter 
from_internal			    fn from_internal(stream: tokenstream::TokenStream, next: &mut Option<tokenstream::TokenStream>)
from_iter			    fn from_iter<I: IntoIterator<Item = T>>(streams: I) -> Self 
from_str			    fn from_str(src: &str) -> Result<TokenStream, LexError> 
integer			    pub fn integer(n: i128) -> Literal 
intern			    pub fn intern(string: &str) -> Term 
into_iter			    fn into_iter(self) -> TokenTreeIter 
is_empty			    pub fn is_empty(&self) -> bool 
joint			        fn joint(first: char, rest: Token, is_joint: bool, span: &mut syntax_pos::Span,
new_token_stream			    pub fn new_token_stream(item: P<ast::Item>) -> TokenStream 
next			    fn next(&mut self) -> Option<TokenTree> 
parse_to_lex_err			fn parse_to_lex_err(mut err: DiagnosticBuilder) -> LexError 
quote			mod quote;
quote			    fn quote(&self) -> TokenStream 
quote			    fn quote(&self) -> TokenStream;
quote_span			pub fn quote_span(span: Span) -> TokenStream 
register_attr_proc_macro			        fn register_attr_proc_macro(&mut self,
register_bang_proc_macro			        fn register_bang_proc_macro(&mut self,
register_custom_derive			        fn register_custom_derive(&mut self,
set_sess			    pub fn set_sess<F, R>(cx: &ExtCtxt, f: F) -> R
span			pub fn span() -> Span 
string			    pub fn string(string: &str) -> Literal 
to_internal			    fn to_internal(self) -> token::DelimToken 
to_internal			    fn to_internal(self) -> tokenstream::TokenStream 
token_stream_inner			    pub fn token_stream_inner(stream: TokenStream) -> tokenstream::TokenStream 
token_stream_parse_items			    pub fn token_stream_parse_items(stream: TokenStream) -> Result<Vec<P<ast::Item>>, LexError> 
token_stream_wrap			    pub fn token_stream_wrap(inner: tokenstream::TokenStream) -> TokenStream 
typed_integer			    fn typed_integer(n: i128, kind: &'static str) -> Literal 
unquote			    pub fn unquote<T: Into<::TokenStream> + Clone>(tokens: &T) -> TokenStream 
with_sess			    pub fn with_sess<F, R>(f: F) -> R
