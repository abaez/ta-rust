AbsExt			    trait AbsExt: Sized 
AbsExt for i128			    impl AbsExt for i128 
FloatStuff			    trait FloatStuff: Sized 
FloatStuff for f32			    impl FloatStuff for f32 
FloatStuff for f64			    impl FloatStuff for f64 
LargeInt			    pub trait LargeInt 
LargeInt for i128			    impl LargeInt for i128 
LargeInt for u128			    impl LargeInt for u128 
NegExt			    trait NegExt: Sized 
NegExt for i128			    impl NegExt for i128 
Sources			impl Sources 
Sources			struct Sources 
extend			    fn extend(&mut self, sources: &[&'static str]) 
from_parts			        fn from_parts(low: Self::LowHalf, high: Self::HighHalf) -> Self;
from_parts			        fn from_parts(low: u64, high: i64) -> i128 
from_parts			        fn from_parts(low: u64, high: u64) -> u128 
get_exponent			        fn get_exponent(self) -> i32 
get_exponent			        fn get_exponent(self) -> i32;
high			        fn high(self) -> Self::HighHalf;
high			        fn high(self) -> i64 
high			        fn high(self) -> u64 
i128_as_f32			    fn i128_as_f32(a: i128) -> f32 
i128_as_f64			    fn i128_as_f64(a: i128) -> f64 
i128_div			    fn i128_div(a: i128, b: i128) -> i128 
i128_div_			        pub extern "C" fn i128_div_(a: i128, b: i128) -> 
i128_mod			    fn i128_mod(a: i128, b: i128) -> i128 
i128_mod_			        pub extern "C" fn i128_mod_(a: i128, b: i128) -> 
iabs			        fn iabs(self) -> i128 
iabs			        fn iabs(self) -> i128;
imp			    mod imp 
low			        fn low(self) -> Self::LowHalf;
low			        fn low(self) -> u64 
lshr			    pub extern "C" fn lshr(a: u128, b: u128) -> u128 
main			fn main() 
new			    fn new() -> Sources 
reimpls			pub mod reimpls 
shl			    pub extern "C" fn shl(a: u128, b: u128) -> u128 
shr			    pub extern "C" fn shr(a: i128, b: i128) -> i128 
to_bytes			        fn to_bytes(self) -> Self::ToBytes;
to_bytes			        fn to_bytes(self) -> u32 { unsafe { ::core::mem::transmute(self) } }
to_bytes			        fn to_bytes(self) -> u64 { unsafe { ::core::mem::transmute(self) } }
u128_as_f32			    fn u128_as_f32(mut a: u128) -> f32 
u128_as_f64			    fn u128_as_f64(mut a: u128) -> f64 
u128_div_			        pub extern "C" fn u128_div_(a: u128, b: u128) -> 
u128_div_mod			    pub extern "C" fn u128_div_mod(n: u128, d: u128, rem: *mut u128) -> u128 
u128_div_mod_			        pub extern "C" fn u128_div_mod_(n: u128, d: u128, rem: *mut u128) -> 
u128_mod_			        pub extern "C" fn u128_mod_(a: u128, b: u128) -> 
u128_mul			    pub extern "C" fn u128_mul(a: i128, b: i128) -> i128 
u64x2			        pub struct u64x2(u64, u64);
uabs			        fn uabs(self) -> u128 
uabs			        fn uabs(self) -> u128;
unchecked_neg			        fn unchecked_neg(self) -> i128 
unchecked_neg			        fn unchecked_neg(self) -> i128;
