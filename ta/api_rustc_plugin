PluginLoader			impl<'a> PluginLoader<'a> 
PluginLoader			struct PluginLoader<'a> 
PluginRegistrar			pub struct PluginRegistrar 
RegistrarFinder			struct RegistrarFinder 
Registry			impl<'a> Registry<'a> 
Registry			pub struct Registry<'a> 
Visitor for RegistrarFinder			impl<'v> Visitor<'v> for RegistrarFinder 
args			    pub fn args<'b>(&'b self) -> &'b [P<ast::MetaItem>] 
build			pub mod build;
call_malformed_plugin_attribute			fn call_malformed_plugin_attribute(a: &Session, b: Span) 
diagnostics			pub mod diagnostics;
dylink_registrar			    fn dylink_registrar(&mut self,
find_plugin_registrar			pub fn find_plugin_registrar(diagnostic: &errors::Handler,
load			pub mod load;
load_plugin			    fn load_plugin(&mut self, span: Span, name: &str, args: Vec<P<ast::MetaItem>>) 
load_plugins			pub fn load_plugins(sess: &Session,
new			    fn new(sess: &'a Session, cstore: &'a CStore, crate_name: &str) -> PluginLoader<'a> 
new			    pub fn new(sess: &'a Session, krate: &ast::Crate) -> Registry<'a> 
register_attribute			    pub fn register_attribute(&mut self, name: String, ty: AttributeType) 
register_early_lint_pass			    pub fn register_early_lint_pass(&mut self, lint_pass: EarlyLintPassObject) 
register_late_lint_pass			    pub fn register_late_lint_pass(&mut self, lint_pass: LateLintPassObject) 
register_lint_group			    pub fn register_lint_group(&mut self, name: &'static str, to: Vec<&'static Lint>) 
register_llvm_pass			    pub fn register_llvm_pass(&mut self, name: &str) 
register_macro			    pub fn register_macro(&mut self, name: &str, expander: MacroExpanderFn) 
register_mir_pass			    pub fn register_mir_pass(&mut self, pass: Box<for<'pcx> MirMapPass<'pcx>>) 
register_syntax_extension			    pub fn register_syntax_extension(&mut self, name: ast::Name, extension: SyntaxExtension) 
registry			pub mod registry;
visit_item			    fn visit_item(&mut self, item: &hir::Item) 
