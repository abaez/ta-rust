Drop for DropCounter			    impl<'a> Drop for DropCounter<'a> 
Drop for SmallDroppable			    impl Drop for SmallDroppable 
Drop for TypedArena			impl<T> Drop for TypedArena<T> 
DropCounter			    struct DropCounter<'a> 
EI			        enum EI<'e> 
Inner			        struct Inner 
Noncopy			    struct Noncopy 
Outer			        struct Outer<'a> 
Point			    struct Point 
Send for TypedArena			unsafe impl<T: Send> Send for TypedArena<T> {}
SmallDroppable			    struct SmallDroppable;
TypedArena			impl<T> TypedArena<T> 
TypedArena			pub struct TypedArena<T> 
TypedArenaChunk			impl<T> TypedArenaChunk<T> 
TypedArenaChunk			struct TypedArenaChunk<T> 
Wrap			        impl<'a> Wrap<'a> 
Wrap			        struct Wrap<'a>(TypedArena<EI<'a>>);
alloc			    pub fn alloc(&self, object: T) -> &mut T 
alloc_inner			            fn alloc_inner<F: Fn() -> Inner>(&self, f: F) -> &Inner 
alloc_outer			            fn alloc_outer<F: Fn() -> Outer<'a>>(&self, f: F) -> &Outer 
bench_copy			    pub fn bench_copy(b: &mut Bencher) 
bench_copy_nonarena			    pub fn bench_copy_nonarena(b: &mut Bencher) 
bench_noncopy			    pub fn bench_noncopy(b: &mut Bencher) 
bench_noncopy_nonarena			    pub fn bench_noncopy_nonarena(b: &mut Bencher) 
clear			    pub fn clear(&mut self) 
clear_last_chunk			    fn clear_last_chunk(&self, last_chunk: &mut TypedArenaChunk<T>) 
destroy			    unsafe fn destroy(&mut self, len: usize) 
drop			        fn drop(&mut self) 
drop			    fn drop(&mut self) 
end			    fn end(&self) -> *mut T 
grow			    fn grow(&self) 
new			    pub fn new() -> TypedArena<T> 
new			    unsafe fn new(capacity: usize) -> TypedArenaChunk<T> 
start			    fn start(&self) -> *mut T 
tests			mod tests 
with_capacity			    pub fn with_capacity(capacity: usize) -> TypedArena<T> 
