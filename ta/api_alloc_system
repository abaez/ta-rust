GetLastError			        fn GetLastError() -> DWORD;
GetProcessHeap			        fn GetProcessHeap() -> HANDLE;
Header			    struct Header(*mut u8);
HeapAlloc			        fn HeapAlloc(hHeap: HANDLE, dwFlags: DWORD, dwBytes: SIZE_T) -> LPVOID;
HeapFree			        fn HeapFree(hHeap: HANDLE, dwFlags: DWORD, lpMem: LPVOID) -> BOOL;
HeapReAlloc			        fn HeapReAlloc(hHeap: HANDLE, dwFlags: DWORD, lpMem: LPVOID, dwBytes: SIZE_T) -> LPVOID;
__rust_allocate			pub extern "C" fn __rust_allocate(size: usize, align: usize) -> *mut u8 
__rust_deallocate			pub extern "C" fn __rust_deallocate(ptr: *mut u8, old_size: usize, align: usize) 
__rust_reallocate			pub extern "C" fn __rust_reallocate(ptr: *mut u8,
__rust_reallocate_inplace			pub extern "C" fn __rust_reallocate_inplace(ptr: *mut u8,
__rust_usable_size			pub extern "C" fn __rust_usable_size(size: usize, align: usize) -> usize 
align_ptr			    unsafe fn align_ptr(ptr: *mut u8, align: usize) -> *mut u8 
aligned_malloc			    unsafe fn aligned_malloc(size: usize, align: usize) -> *mut u8 
allocate			    pub unsafe fn allocate(size: usize, align: usize) -> *mut u8 
deallocate			    pub unsafe fn deallocate(ptr: *mut u8, _old_size: usize, _align: usize) 
deallocate			    pub unsafe fn deallocate(ptr: *mut u8, _old_size: usize, align: usize) 
get_header			    unsafe fn get_header<'a>(ptr: *mut u8) -> &'a mut Header 
imp			mod imp 
reallocate			    pub unsafe fn reallocate(ptr: *mut u8, _old_size: usize, size: usize, align: usize) -> *mut u8 
reallocate			    pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, size: usize, align: usize) -> *mut u8 
reallocate_inplace			    pub unsafe fn reallocate_inplace(_ptr: *mut u8,
reallocate_inplace			    pub unsafe fn reallocate_inplace(ptr: *mut u8,
usable_size			    pub fn usable_size(size: usize, _align: usize) -> usize 
