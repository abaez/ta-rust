Analysis			impl Analysis 
Analysis			struct Analysis 
Analysis			impl Analysis 
Analysis			struct Analysis 
CrateData			pub struct CrateData 
CratePreludeData			pub struct CratePreludeData 
CratePreludeData			pub struct CratePreludeData 
CsvDumper			impl<'b, W: Write> CsvDumper<'b, W> 
CsvDumper			pub struct CsvDumper<'b, W: 'b> 
Data			pub enum Data 
Def			struct Def 
Def			struct Def 
DefKind			enum DefKind 
DefKind			enum DefKind 
Drop for JsonApiDumper			impl<'b, W: Write> Drop for JsonApiDumper<'b, W> 
Drop for JsonDumper			impl<'b, W: Write> Drop for JsonDumper<'b, W> 
Dump			pub trait Dump 
Dump for CsvDumper			impl<'b, W: Write + 'b> Dump for CsvDumper<'b, W> 
Dump for JsonApiDumper			impl<'b, W: Write + 'b> Dump for JsonApiDumper<'b, W> 
Dump for JsonDumper			impl<'b, W: Write + 'b> Dump for JsonDumper<'b, W> 
DumpVisitor			impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> 
DumpVisitor			pub struct DumpVisitor<'l, 'tcx: 'l, 'll, D: 'll> 
EnumData			pub struct EnumData 
EnumData			pub struct EnumData 
ExternCrateData			pub struct ExternCrateData 
ExternCrateData			pub struct ExternCrateData 
ExternalCrateData			pub struct ExternalCrateData 
Format			impl Format 
Format			pub enum Format 
From for Def			impl From<EnumData> for Def 
From for Def			impl From<FunctionData> for Def 
From for Def			impl From<MacroData> for Def 
From for Def			impl From<MethodData> for Def 
From for Def			impl From<StructData> for Def 
From for Def			impl From<StructVariantData> for Def 
From for Def			impl From<TraitData> for Def 
From for Def			impl From<TupleVariantData> for Def 
From for Def			impl From<TypeDefData> for Def 
From for Def			impl From<VariableData> for Def 
From for Id			impl From<DefId> for Id 
From for Id			impl From<DefId> for Id 
From for Import			impl From<ExternCrateData> for Import 
From for Import			impl From<UseData> for Import 
From for Import			impl From<UseGlobData> for Import 
From for MacroRef			impl From<MacroUseData> for MacroRef 
From for Option			impl From<EnumData> for Option<Def> 
From for Option			impl From<FunctionData> for Option<Def> 
From for Option			impl From<MacroData> for Option<Def> 
From for Option			impl From<MethodData> for Option<Def> 
From for Option			impl From<ModData> for Option<Def> 
From for Option			impl From<StructData> for Option<Def> 
From for Option			impl From<StructVariantData> for Option<Def> 
From for Option			impl From<TraitData> for Option<Def> 
From for Option			impl From<TupleVariantData> for Option<Def> 
From for Option			impl From<TypeDefData> for Option<Def> 
From for Option			impl From<UseData> for Option<Import> 
From for Option			impl From<UseGlobData> for Option<Import> 
From for Option			impl From<VariableData> for Option<Def> 
From for Ref			impl From<FunctionCallData> for Ref 
From for Ref			impl From<FunctionRefData> for Ref 
From for Ref			impl From<MethodCallData> for Ref 
From for Ref			impl From<ModRefData> for Ref 
From for Ref			impl From<TypeRefData> for Ref 
From for Ref			impl From<VariableRefData> for Ref 
From for Visibility			impl<'a> From<&'a ast::Visibility> for Visibility 
From for Visibility			impl<'a> From<&'a hir::Visibility> for Visibility 
FunctionCallData			pub struct FunctionCallData 
FunctionCallData			pub struct FunctionCallData 
FunctionData			pub struct FunctionData 
FunctionData			pub struct FunctionData 
FunctionRefData			pub struct FunctionRefData 
FunctionRefData			pub struct FunctionRefData 
Id			struct Id 
Id			struct Id 
ImplData			pub struct ImplData 
ImplData			pub struct ImplData 
ImplData2			pub struct ImplData2 
Import			struct Import 
Import			struct Import 
ImportKind			enum ImportKind 
ImportKind			enum ImportKind 
InheritanceData			pub struct InheritanceData 
InheritanceData			pub struct InheritanceData 
JsonApiDumper			impl<'b, W: Write> JsonApiDumper<'b, W> 
JsonApiDumper			pub struct JsonApiDumper<'b, W: Write + 'b> 
JsonDumper			impl<'b, W: Write> JsonDumper<'b, W> 
JsonDumper			pub struct JsonDumper<'b, W: Write + 'b> 
Lower			pub trait Lower 
Lower for data			impl Lower for data::CratePreludeData 
Lower for data			impl Lower for data::EnumData 
Lower for data			impl Lower for data::ExternCrateData 
Lower for data			impl Lower for data::FunctionCallData 
Lower for data			impl Lower for data::FunctionData 
Lower for data			impl Lower for data::FunctionRefData 
Lower for data			impl Lower for data::ImplData 
Lower for data			impl Lower for data::InheritanceData 
Lower for data			impl Lower for data::MacroData 
Lower for data			impl Lower for data::MacroUseData 
Lower for data			impl Lower for data::MethodCallData 
Lower for data			impl Lower for data::MethodData 
Lower for data			impl Lower for data::ModData 
Lower for data			impl Lower for data::ModRefData 
Lower for data			impl Lower for data::StructData 
Lower for data			impl Lower for data::StructVariantData 
Lower for data			impl Lower for data::TraitData 
Lower for data			impl Lower for data::TupleVariantData 
Lower for data			impl Lower for data::TypeDefData 
Lower for data			impl Lower for data::TypeRefData 
Lower for data			impl Lower for data::UseData 
Lower for data			impl Lower for data::UseGlobData 
Lower for data			impl Lower for data::VariableData 
Lower for data			impl Lower for data::VariableRefData 
MacroData			pub struct MacroData 
MacroData			pub struct MacroData 
MacroRef			struct MacroRef 
MacroUseData			pub struct MacroUseData 
MacroUseData			pub struct MacroUseData 
MethodCallData			pub struct MethodCallData 
MethodCallData			pub struct MethodCallData 
MethodData			pub struct MethodData 
MethodData			pub struct MethodData 
ModData			pub struct ModData 
ModData			pub struct ModData 
ModRefData			pub struct ModRefData 
ModRefData			pub struct ModRefData 
PathCollector			impl PathCollector 
PathCollector			struct PathCollector 
Ref			struct Ref 
RefKind			enum RefKind 
Row			    pub enum Row 
SaveContext			impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> 
SaveContext			pub struct SaveContext<'l, 'tcx: 'l> 
SpanData			impl SpanData 
SpanData			pub struct SpanData 
SpanUtils			impl<'a> SpanUtils<'a> 
SpanUtils			pub struct SpanUtils<'a> 
StructData			pub struct StructData 
StructData			pub struct StructData 
StructVariantData			pub struct StructVariantData 
StructVariantData			pub struct StructVariantData 
TraitData			pub struct TraitData 
TraitData			pub struct TraitData 
TupleVariantData			pub struct TupleVariantData 
TupleVariantData			pub struct TupleVariantData 
TypeDefData			pub struct TypeDefData 
TypeDefData			pub struct TypeDefData 
TypeRefData			pub struct TypeRefData 
TypeRefData			pub struct TypeRefData 
UseData			pub struct UseData 
UseData			pub struct UseData 
UseGlobData			pub struct UseGlobData 
UseGlobData			pub struct UseGlobData 
VariableData			pub struct VariableData 
VariableData			pub struct VariableData 
VariableKind			pub enum VariableKind 
VariableRefData			pub struct VariableRefData 
VariableRefData			pub struct VariableRefData 
Visibility			pub enum Visibility 
Visitor for DumpVisitor			impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll, D> 
Visitor for PathCollector			impl<'a> Visitor<'a> for PathCollector 
crate_prelude			    fn crate_prelude(&mut self, data: CratePreludeData) 
crate_prelude			    fn crate_prelude(&mut self, CratePreludeData) {}
crate_prelude			    fn crate_prelude(&mut self, data: CratePreludeData) 
crate_prelude			    fn crate_prelude(&mut self, data: CratePreludeData) 
csv_dumper			mod csv_dumper;
data			mod data;
docs_for_attrs			fn docs_for_attrs(attrs: &[Attribute]) -> String 
drop			    fn drop(&mut self) 
drop			    fn drop(&mut self) 
dump			mod dump;
dump_crate_info			    pub fn dump_crate_info(&mut self, name: &str, krate: &ast::Crate) 
dump_visitor			mod dump_visitor;
enclosing_scope			    pub fn enclosing_scope(&self, id: NodeId) -> NodeId 
enum_data			    fn enum_data(&mut self, data: EnumData) 
enum_data			    fn enum_data(&mut self, EnumData) {}
escape			fn escape(s: String) -> String 
escape			fn escape(s: String) -> String 
extension			    fn extension(&self) -> &'static str 
extern_crate			    fn extern_crate(&mut self, data: ExternCrateData) 
extern_crate			    fn extern_crate(&mut self, ExternCrateData) {}
external_data			pub mod external_data;
filter_generated			    pub fn filter_generated(&self, sub_span: Option<Span>, parent: Span) -> bool 
from			    fn from(v: &'a ast::Visibility) -> Visibility 
from			    fn from(v: &'a hir::Visibility) -> Visibility 
from			    fn from(data: EnumData) -> Option<Def> 
from			    fn from(data: FunctionData) -> Option<Def> 
from			    fn from(data: MacroData) -> Option<Def> 
from			    fn from(data: MethodData) -> Option<Def> 
from			    fn from(data: StructData) -> Option<Def> 
from			    fn from(data: StructVariantData) -> Option<Def> 
from			    fn from(data: TraitData) -> Option<Def> 
from			    fn from(data: TupleVariantData) -> Option<Def> 
from			    fn from(data: TypeDefData) -> Option<Def> 
from			    fn from(data: UseData) -> Option<Import> 
from			    fn from(data: UseGlobData) -> Option<Import> 
from			    fn from(data: VariableData) -> Option<Def> 
from			    fn from(data:ModData) -> Option<Def> 
from			    fn from(id: DefId) -> Id 
from			    fn from(data: EnumData) -> Def 
from			    fn from(data: ExternCrateData) -> Import 
from			    fn from(data: FunctionCallData) -> Ref 
from			    fn from(data: FunctionData) -> Def 
from			    fn from(data: FunctionRefData) -> Ref 
from			    fn from(data: MacroData) -> Def 
from			    fn from(data: MacroUseData) -> MacroRef 
from			    fn from(data: MethodCallData) -> Ref 
from			    fn from(data: MethodData) -> Def 
from			    fn from(data: ModRefData) -> Ref 
from			    fn from(data: StructData) -> Def 
from			    fn from(data: StructVariantData) -> Def 
from			    fn from(data: TraitData) -> Def 
from			    fn from(data: TupleVariantData) -> Def 
from			    fn from(data: TypeDefData) -> Def 
from			    fn from(data: TypeRefData) -> Ref 
from			    fn from(data: UseData) -> Import 
from			    fn from(data: UseGlobData) -> Import 
from			    fn from(data: VariableData) -> Def 
from			    fn from(data: VariableRefData) -> Ref 
from			    fn from(id: DefId) -> Id 
from_span			    pub fn from_span(span: Span, cm: &CodeMap) -> SpanData 
from_span_utils			    pub fn from_span_utils(tcx: TyCtxt<'l, 'tcx, 'tcx>,
function			    fn function(&mut self, data: FunctionData) 
function			    fn function(&mut self, FunctionData) {}
function_call			    fn function_call(&mut self, data: FunctionCallData) 
function_call			    fn function_call(&mut self, FunctionCallData) {}
function_ref			    fn function_ref(&mut self, data: FunctionRefData) 
function_ref			    fn function_ref(&mut self, FunctionRefData) {}
generated_code			pub fn generated_code(span: Span) -> bool 
get_data_for_id			    pub fn get_data_for_id(&self, _id: &NodeId) -> Data 
get_expr_data			    pub fn get_expr_data(&self, expr: &ast::Expr) -> Option<Data> 
get_external_crates			    pub fn get_external_crates(&self) -> Vec<CrateData> 
get_field_data			    pub fn get_field_data(&self, field: &ast::StructField,
get_field_ref_data			    pub fn get_field_ref_data(&self,
get_item_data			    pub fn get_item_data(&self, item: &ast::Item) -> Option<Data> 
get_macro_use_data			    pub fn get_macro_use_data(&self, span: Span, id: NodeId) -> Option<MacroUseData> 
get_method_data			    pub fn get_method_data(&self, id: ast::NodeId,
get_path_data			    pub fn get_path_data(&self, id: NodeId, path: &ast::Path) -> Option<Data> 
get_path_def			    pub fn get_path_def(&self, id: NodeId) -> Def 
get_trait_ref_data			    pub fn get_trait_ref_data(&self,
impl_data			    fn impl_data(&mut self, data: ImplData) 
impl_data			    fn impl_data(&mut self, ImplData) {}
impl_data			    fn impl_data(&mut self, _data: ImplData) {}
inheritance			    fn inheritance(&mut self, data: InheritanceData) 
inheritance			    fn inheritance(&mut self, InheritanceData) {}
inheritance			    fn inheritance(&mut self, _data: InheritanceData) {}
json_api_dumper			mod json_api_dumper;
json_dumper			mod json_dumper;
lookup_def_id			    fn lookup_def_id(&self, ref_id: NodeId) -> Option<DefId> 
lookup_ref_id			    fn lookup_ref_id(&self, ref_id: NodeId) -> Option<DefId> 
lower			    fn lower(self, tcx: TyCtxt) -> CratePreludeData 
lower			    fn lower(self, tcx: TyCtxt) -> EnumData 
lower			    fn lower(self, tcx: TyCtxt) -> ExternCrateData 
lower			    fn lower(self, tcx: TyCtxt) -> FunctionCallData 
lower			    fn lower(self, tcx: TyCtxt) -> FunctionData 
lower			    fn lower(self, tcx: TyCtxt) -> FunctionRefData 
lower			    fn lower(self, tcx: TyCtxt) -> ImplData 
lower			    fn lower(self, tcx: TyCtxt) -> InheritanceData 
lower			    fn lower(self, tcx: TyCtxt) -> MacroData 
lower			    fn lower(self, tcx: TyCtxt) -> MacroUseData 
lower			    fn lower(self, tcx: TyCtxt) -> MethodCallData 
lower			    fn lower(self, tcx: TyCtxt) -> MethodData 
lower			    fn lower(self, tcx: TyCtxt) -> ModData 
lower			    fn lower(self, tcx: TyCtxt) -> ModRefData 
lower			    fn lower(self, tcx: TyCtxt) -> Self::Target;
lower			    fn lower(self, tcx: TyCtxt) -> StructData 
lower			    fn lower(self, tcx: TyCtxt) -> StructVariantData 
lower			    fn lower(self, tcx: TyCtxt) -> TraitData 
lower			    fn lower(self, tcx: TyCtxt) -> TupleVariantData 
lower			    fn lower(self, tcx: TyCtxt) -> TypeDefData 
lower			    fn lower(self, tcx: TyCtxt) -> TypeRefData 
lower			    fn lower(self, tcx: TyCtxt) -> UseData 
lower			    fn lower(self, tcx: TyCtxt) -> UseGlobData 
lower			    fn lower(self, tcx: TyCtxt) -> VariableData 
lower			    fn lower(self, tcx: TyCtxt) -> VariableRefData 
macro_data			    fn macro_data(&mut self, data: MacroData) 
macro_data			    fn macro_data(&mut self, MacroData) {}
macro_use			    fn macro_use(&mut self, data: MacroUseData) 
macro_use			    fn macro_use(&mut self, MacroUseData) {}
make_def_id			pub fn make_def_id(id: NodeId, map: &Map) -> DefId 
make_path_string			    pub fn make_path_string(file_name: &str) -> String 
make_signature			fn make_signature(decl: &ast::FnDecl, generics: &ast::Generics) -> String 
make_sub_span			    pub fn make_sub_span(&self, span: Span, sub_span: Option<Span>) -> Option<Span> 
make_values_str			fn make_values_str(pairs: &[(&'static str, &str)]) -> String 
method			    fn method(&mut self, data: MethodData) 
method			    fn method(&mut self, MethodData) {}
method_call			    fn method_call(&mut self, data: MethodCallData) 
method_call			    fn method_call(&mut self, MethodCallData) {}
mod_data			    fn mod_data(&mut self, data: ModData) 
mod_data			    fn mod_data(&mut self, ModData) {}
mod_data			    fn mod_data(&mut self, data: ModData) 
mod_ref			    fn mod_ref(&mut self, data: ModRefData) 
mod_ref			    fn mod_ref(&mut self, ModRefData) {}
nest			    fn nest<F>(&mut self, scope_id: NodeId, f: F)
new			    pub fn new(writer: &'b mut W) -> CsvDumper<'b, W> 
new			    pub fn new(save_ctxt: SaveContext<'l, 'tcx>,
new			    fn new() -> Analysis 
new			    pub fn new(writer: &'b mut W) -> JsonApiDumper<'b, W> 
new			    fn new() -> Analysis 
new			    pub fn new(writer: &'b mut W) -> JsonDumper<'b, W> 
new			    fn new() -> PathCollector 
new			    pub fn new(tcx: TyCtxt<'l, 'tcx, 'tcx>,
new			    pub fn new(sess: &'a Session) -> SpanUtils<'a> 
null_def_id			pub fn null_def_id() -> DefId 
process_assoc_const			    fn process_assoc_const(&mut self,
process_crate			pub fn process_crate<'l, 'tcx>(tcx: TyCtxt<'l, 'tcx, 'tcx>,
process_def_kind			    fn process_def_kind(&mut self,
process_enum			    fn process_enum(&mut self,
process_fn			    fn process_fn(&mut self,
process_formals			    fn process_formals(&mut self, formals: &'l [ast::Arg], qualname: &str) 
process_generic_params			    fn process_generic_params(&mut self,
process_impl			    fn process_impl(&mut self,
process_impl_item			    fn process_impl_item(&mut self, impl_item: &'l ast::ImplItem, impl_id: DefId) 
process_macro_use			    fn process_macro_use(&mut self, span: Span, id: NodeId) 
process_method			    fn process_method(&mut self,
process_method_call			    fn process_method_call(&mut self, ex: &'l ast::Expr, args: &'l [P<ast::Expr>]) 
process_mod			    fn process_mod(&mut self, item: &ast::Item) 
process_pat			    fn process_pat(&mut self, p: &'l ast::Pat) 
process_path			    fn process_path(&mut self, id: NodeId, path: &ast::Path, ref_kind: Option<recorder::Row>) 
process_path_prefixes			    fn process_path_prefixes(&self, path: &ast::Path) -> Vec<(Span, String)> 
process_static_or_const_item			    fn process_static_or_const_item(&mut self,
process_struct			    fn process_struct(&mut self,
process_struct_field_def			    fn process_struct_field_def(&mut self, field: &ast::StructField, parent_id: NodeId) 
process_struct_lit			    fn process_struct_lit(&mut self,
process_trait			    fn process_trait(&mut self,
process_trait_item			    fn process_trait_item(&mut self, trait_item: &'l ast::TraitItem, trait_id: DefId) 
process_trait_ref			    fn process_trait_ref(&mut self, trait_ref: &'l ast::TraitRef) 
process_var_decl			    fn process_var_decl(&mut self, p: &'l ast::Pat, value: String) 
record			    fn record(&mut self, kind: &str, span: SpanData, values: String) 
record_raw			    fn record_raw(&mut self, info: &str) 
recorder			pub mod recorder 
report_span_err			    pub fn report_span_err(&self, kind: &str, span: Span) 
retokenise_span			    pub fn retokenise_span(&self, span: Span) -> StringReader<'a> 
snippet			    pub fn snippet(&self, span: Span) -> String 
span_extent_str			fn span_extent_str(span: SpanData) -> String 
span_for_first_ident			    pub fn span_for_first_ident(&self, span: Span) -> Option<Span> 
span_for_last_ident			    pub fn span_for_last_ident(&self, span: Span) -> Option<Span> 
span_for_macro_def_name			    pub fn span_for_macro_def_name(&self, span: Span) -> Option<Span> 
span_for_macro_use_name			    pub fn span_for_macro_use_name(&self, span:Span) -> Option<Span> 
span_utils			pub mod span_utils;
spans_for_path_segments			    pub fn spans_for_path_segments(&self, path: &ast::Path) -> Vec<Span> 
spans_for_ty_params			    pub fn spans_for_ty_params(&self, span: Span, number: isize) -> Vec<Span> 
spans_with_brackets			    pub fn spans_with_brackets(&self, span: Span, nesting: isize, limit: isize) -> Vec<Span> 
struct_data			    fn struct_data(&mut self, data: StructData) 
struct_data			    fn struct_data(&mut self, StructData) {}
struct_variant			    fn struct_variant(&mut self, data: StructVariantData) 
struct_variant			    fn struct_variant(&mut self, StructVariantData) {}
sub_span_after			    fn sub_span_after<F: Fn(Token) -> bool>(&self, span: Span, f: F) -> Option<Span> 
sub_span_after_keyword			    pub fn sub_span_after_keyword(&self, span: Span, keyword: keywords::Keyword) -> Option<Span> 
sub_span_after_token			    pub fn sub_span_after_token(&self, span: Span, tok: Token) -> Option<Span> 
sub_span_before_token			    pub fn sub_span_before_token(&self, span: Span, tok: Token) -> Option<Span> 
sub_span_for_meth_name			    pub fn sub_span_for_meth_name(&self, span: Span) -> Option<Span> 
sub_span_for_type_name			    pub fn sub_span_for_type_name(&self, span: Span) -> Option<Span> 
sub_span_of_token			    pub fn sub_span_of_token(&self, span: Span, tok: Token) -> Option<Span> 
trait_data			    fn trait_data(&mut self, data: TraitData) 
trait_data			    fn trait_data(&mut self, TraitData) {}
tuple_variant			    fn tuple_variant(&mut self, data: TupleVariantData) 
tuple_variant			    fn tuple_variant(&mut self, TupleVariantData) {}
type_ref			    fn type_ref(&mut self, data: TypeRefData) 
type_ref			    fn type_ref(&mut self, TypeRefData) {}
typedef			    fn typedef(&mut self, data: TypeDefData) 
typedef			    fn typedef(&mut self, TypeDefData) {}
use_data			    fn use_data(&mut self, data: UseData) 
use_data			    fn use_data(&mut self, UseData) {}
use_glob			    fn use_glob(&mut self, data: UseGlobData) 
use_glob			    fn use_glob(&mut self, UseGlobData) {}
variable			    fn variable(&mut self, data: VariableData) 
variable			    fn variable(&mut self, VariableData) {}
variable_ref			    fn variable_ref(&mut self, data: VariableRefData) 
variable_ref			    fn variable_ref(&mut self, VariableRefData) {}
visit_arm			    fn visit_arm(&mut self, arm: &'l ast::Arm) 
visit_expr			    fn visit_expr(&mut self, ex: &'l ast::Expr) 
visit_generics			    fn visit_generics(&mut self, generics: &'l ast::Generics) 
visit_item			    fn visit_item(&mut self, item: &'l ast::Item) 
visit_local			    fn visit_local(&mut self, l: &'l ast::Local) 
visit_mac			    fn visit_mac(&mut self, mac: &'l ast::Mac) 
visit_pat			    fn visit_pat(&mut self, p: &'l ast::Pat) 
visit_pat			    fn visit_pat(&mut self, p: &ast::Pat) 
visit_stmt			    fn visit_stmt(&mut self, s: &'l ast::Stmt) 
visit_ty			    fn visit_ty(&mut self, t: &'l ast::Ty) 
write_sub_path_trait_truncated			    fn write_sub_path_trait_truncated(&mut self, path: &ast::Path) 
write_sub_paths			    fn write_sub_paths(&mut self, path: &ast::Path, global: bool) 
write_sub_paths_truncated			    fn write_sub_paths_truncated(&mut self, path: &ast::Path, global: bool) 
