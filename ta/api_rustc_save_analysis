CallbackHandler			pub struct CallbackHandler<'b> 
CallbackOutput			pub struct CallbackOutput<'b> 
Data			pub enum Data 
Drop for JsonApiDumper			impl<'b, W: Write> Drop for JsonApiDumper<'b, W> 
Drop for JsonDumper			impl<O: DumpOutput> Drop for JsonDumper<O> 
Dump			pub trait Dump 
Dump for JsonApiDumper			impl<'b, W: Write + 'b> Dump for JsonApiDumper<'b, W> 
Dump for JsonDumper			impl<'b, O: DumpOutput + 'b> Dump for JsonDumper<O> 
DumpHandler			impl<'a> DumpHandler<'a> 
DumpHandler			pub struct DumpHandler<'a> 
DumpOutput			pub trait DumpOutput 
DumpOutput for CallbackOutput			impl<'b> DumpOutput for CallbackOutput<'b> 
DumpOutput for WriteOutput			impl<'b, W: Write> DumpOutput for WriteOutput<'b, W> 
DumpVisitor			impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> 
DumpVisitor			pub struct DumpVisitor<'l, 'tcx: 'l, 'll, D: 'll> 
Format			impl Format 
Format			pub enum Format 
JsonApiDumper			impl<'b, W: Write> JsonApiDumper<'b, W> 
JsonApiDumper			pub struct JsonApiDumper<'b, W: Write + 'b> 
JsonDumper			impl<'b, W: Write> JsonDumper<WriteOutput<'b, W>> 
JsonDumper			impl<'b> JsonDumper<CallbackOutput<'b>> 
JsonDumper			pub struct JsonDumper<O: DumpOutput> 
PathCollector			impl PathCollector 
PathCollector			struct PathCollector 
SaveContext			impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> 
SaveContext			pub struct SaveContext<'l, 'tcx: 'l> 
SaveHandler			pub trait SaveHandler 
SaveHandler for CallbackHandler			impl<'b> SaveHandler for CallbackHandler<'b> 
SaveHandler for DumpHandler			impl<'a> SaveHandler for DumpHandler<'a> 
Sig			trait Sig 
Sig for ast			impl Sig for ast::ForeignItem 
Sig for ast			impl Sig for ast::Generics 
Sig for ast			impl Sig for ast::Item 
Sig for ast			impl Sig for ast::Path 
Sig for ast			impl Sig for ast::StructField 
Sig for ast			impl Sig for ast::Ty 
Sig for ast			impl Sig for ast::Variant_ 
SpanUtils			impl<'a> SpanUtils<'a> 
SpanUtils			pub struct SpanUtils<'a> 
Visitor for DumpVisitor			impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll, D> 
Visitor for PathCollector			impl<'a> Visitor<'a> for PathCollector 
WriteOutput			pub struct WriteOutput<'b, W: Write + 'b> 
assoc_const_signature			pub fn assoc_const_signature(id: NodeId,
assoc_type_signature			pub fn assoc_type_signature(id: NodeId,
crate_prelude			    fn crate_prelude(&mut self, data: CratePreludeData) 
crate_prelude			    fn crate_prelude(&mut self, data: CratePreludeData) 
crate_prelude			    fn crate_prelude(&mut self, _: CratePreludeData);
docs_for_attrs			fn docs_for_attrs(attrs: &[Attribute]) -> String 
drop			    fn drop(&mut self) 
drop			    fn drop(&mut self) 
dump			    fn dump(&mut self, result: &Analysis) 
dump			    fn dump(&mut self, result: &Analysis);
dump_crate_info			    pub fn dump_crate_info(&mut self, name: &str, krate: &ast::Crate) 
dump_def			    fn dump_def(&mut self, public: bool, mut data: Def) 
dump_def			    fn dump_def(&mut self, _: bool, mut data: Def) 
dump_def			    fn dump_def(&mut self, _: bool, _: Def);
dump_ref			    fn dump_ref(&mut self, data: Ref) 
dump_ref			    fn dump_ref(&mut self, _: Ref) {}
dump_relation			    fn dump_relation(&mut self, data: Relation) 
dump_relation			    fn dump_relation(&mut self, data: Relation) 
dump_relation			    fn dump_relation(&mut self, data: Relation);
dump_visitor			mod dump_visitor;
enclosing_scope			    pub fn enclosing_scope(&self, id: NodeId) -> NodeId 
escape			fn escape(s: String) -> String 
extend_sig			fn extend_sig(mut sig: Signature,
extension			    fn extension(&self) -> &'static str 
field_signature			pub fn field_signature(field: &ast::StructField, scx: &SaveContext) -> Option<Signature> 
filter_generated			    pub fn filter_generated(&self, sub_span: Option<Span>, parent: Span) -> bool 
foreign_item_signature			pub fn foreign_item_signature(item: &ast::ForeignItem, scx: &SaveContext) -> Option<Signature> 
generated_code			fn generated_code(span: Span) -> bool 
get_expr_data			    pub fn get_expr_data(&self, expr: &ast::Expr) -> Option<Data> 
get_extern_item_data			    pub fn get_extern_item_data(&self, item: &ast::ForeignItem) -> Option<Data> 
get_external_crates			    pub fn get_external_crates(&self) -> Vec<ExternalCrateData> 
get_field_data			    pub fn get_field_data(&self,
get_field_ref_data			    pub fn get_field_ref_data(&self,
get_item_data			    pub fn get_item_data(&self, item: &ast::Item) -> Option<Data> 
get_macro_use_data			    pub fn get_macro_use_data(&self, span: Span) -> Option<MacroRef> 
get_method_data			    pub fn get_method_data(&self,
get_path_data			    pub fn get_path_data(&self, id: NodeId, path: &ast::Path) -> Option<Ref> 
get_path_def			    pub fn get_path_def(&self, id: NodeId) -> HirDef 
get_trait_ref_data			    pub fn get_trait_ref_data(&self,
id_from_def_id			fn id_from_def_id(id: DefId) -> rls_data::Id 
id_from_node_id			fn id_from_node_id(id: NodeId, scx: &SaveContext) -> rls_data::Id 
import			    fn import(&mut self, public: bool, import: Import) 
import			    fn import(&mut self, _: bool, import: Import) 
import			    fn import(&mut self, _: bool, _: Import);
item_signature			pub fn item_signature(item: &ast::Item, scx: &SaveContext) -> Option<Signature> 
json_api_dumper			mod json_api_dumper;
json_dumper			mod json_dumper;
lookup_def_id			    fn lookup_def_id(&self, ref_id: NodeId) -> Option<DefId> 
lookup_ref_id			    fn lookup_ref_id(&self, ref_id: NodeId) -> Option<DefId> 
lower_attributes			fn lower_attributes(attrs: Vec<Attribute>, scx: &SaveContext) -> Vec<rls_data::Attribute> 
macro_use			    fn macro_use(&mut self, data: MacroRef) 
macro_use			    fn macro_use(&mut self, _: MacroRef) {}
make			    fn make(&self, offset: usize, _parent_id: Option<NodeId>, scx: &SaveContext) -> Result 
make			    fn make(&self, offset: usize, id: Option<NodeId>, scx: &SaveContext) -> Result 
make			    fn make(&self, offset: usize, id: Option<NodeId>, scx: &SaveContext) -> Result;
make_assoc_const_signature			fn make_assoc_const_signature(id: NodeId,
make_assoc_type_signature			fn make_assoc_type_signature(id: NodeId,
make_method_signature			fn make_method_signature(id: NodeId,
make_path_string			    pub fn make_path_string(file_name: &str) -> String 
make_signature			fn make_signature(decl: &ast::FnDecl, generics: &ast::Generics) -> String 
merge_sigs			fn merge_sigs(text: String, sigs: Vec<Signature>) -> Signature 
method_signature			pub fn method_signature(id: NodeId,
name_and_generics			fn name_and_generics(mut text: String,
nest_scope			    fn nest_scope<F>(&mut self, scope_id: NodeId, f: F)
nest_tables			    fn nest_tables<F>(&mut self, item_id: NodeId, f: F)
new			    pub fn new(save_ctxt: SaveContext<'l, 'tcx>,
new			    pub fn new(writer: &'b mut W) -> JsonApiDumper<'b, W> 
new			    pub fn new(writer: &'b mut W) -> JsonDumper<WriteOutput<'b, W>> 
new			    fn new() -> PathCollector 
new			    pub fn new(format: Format, odir: Option<&'a Path>, cratename: &str) -> DumpHandler<'a> 
new			    pub fn new(sess: &'a Session) -> SpanUtils<'a> 
null_id			fn null_id() -> rls_data::Id 
output_file			    fn output_file(&self, sess: &Session) -> File 
process_assoc_const			    fn process_assoc_const(&mut self,
process_crate			pub fn process_crate<'l, 'tcx, H: SaveHandler>(tcx: TyCtxt<'l, 'tcx, 'tcx>,
process_def_kind			    fn process_def_kind(&mut self,
process_enum			    fn process_enum(&mut self,
process_fn			    fn process_fn(&mut self,
process_formals			    fn process_formals(&mut self, formals: &'l [ast::Arg], qualname: &str) 
process_generic_params			    fn process_generic_params(&mut self,
process_impl			    fn process_impl(&mut self,
process_impl_item			    fn process_impl_item(&mut self, impl_item: &'l ast::ImplItem, impl_id: DefId) 
process_macro_use			    fn process_macro_use(&mut self, span: Span) 
process_method			    fn process_method(&mut self,
process_method_call			    fn process_method_call(&mut self, ex: &'l ast::Expr, args: &'l [P<ast::Expr>]) 
process_mod			    fn process_mod(&mut self, item: &ast::Item) 
process_pat			    fn process_pat(&mut self, p: &'l ast::Pat) 
process_path			    fn process_path(&mut self, id: NodeId, path: &ast::Path) 
process_path_prefixes			    fn process_path_prefixes(&self, path: &ast::Path) -> Vec<(Span, String)> 
process_static_or_const_item			    fn process_static_or_const_item(&mut self,
process_struct			    fn process_struct(&mut self,
process_struct_field_def			    fn process_struct_field_def(&mut self, field: &ast::StructField, parent_id: NodeId) 
process_struct_lit			    fn process_struct_lit(&mut self,
process_trait			    fn process_trait(&mut self,
process_trait_item			    fn process_trait_item(&mut self, trait_item: &'l ast::TraitItem, trait_id: DefId) 
process_trait_ref			    fn process_trait_ref(&mut self, trait_ref: &'l ast::TraitRef) 
process_var_decl			    fn process_var_decl(&mut self, p: &'l ast::Pat, value: String) 
replace_text			fn replace_text(mut sig: Signature, text: String) -> Signature 
retokenise_span			    pub fn retokenise_span(&self, span: Span) -> StringReader<'a> 
save			    fn save<'l, 'tcx>(&mut self,
sig			mod sig;
snippet			    pub fn snippet(&self, span: Span) -> String 
span_for_first_ident			    pub fn span_for_first_ident(&self, span: Span) -> Option<Span> 
span_for_last_ident			    pub fn span_for_last_ident(&self, span: Span) -> Option<Span> 
span_from_span			    fn span_from_span(&self, span: Span) -> SpanData 
span_from_span			    fn span_from_span(&self, span: Span) -> SpanData 
span_utils			mod span_utils;
spans_for_path_segments			    pub fn spans_for_path_segments(&self, path: &ast::Path) -> Vec<Span> 
spans_for_ty_params			    pub fn spans_for_ty_params(&self, span: Span, number: isize) -> Vec<Span> 
spans_with_brackets			    pub fn spans_with_brackets(&self, span: Span, nesting: isize, limit: isize) -> Vec<Span> 
sub_span_after			    fn sub_span_after<F: Fn(Token) -> bool>(&self, span: Span, f: F) -> Option<Span> 
sub_span_after_keyword			    pub fn sub_span_after_keyword(&self, span: Span, keyword: keywords::Keyword) -> Option<Span> 
sub_span_after_token			    pub fn sub_span_after_token(&self, span: Span, tok: Token) -> Option<Span> 
sub_span_before_token			    pub fn sub_span_before_token(&self, span: Span, tok: Token) -> Option<Span> 
sub_span_for_meth_name			    pub fn sub_span_for_meth_name(&self, span: Span) -> Option<Span> 
sub_span_for_type_name			    pub fn sub_span_for_type_name(&self, span: Span) -> Option<Span> 
sub_span_of_token			    pub fn sub_span_of_token(&self, span: Span, tok: Token) -> Option<Span> 
text_sig			fn text_sig(text: String) -> Signature 
variant_signature			pub fn variant_signature(variant: &ast::Variant, scx: &SaveContext) -> Option<Signature> 
visit_arm			    fn visit_arm(&mut self, arm: &'l ast::Arm) 
visit_expr			    fn visit_expr(&mut self, ex: &'l ast::Expr) 
visit_foreign_item			    fn visit_foreign_item(&mut self, item: &'l ast::ForeignItem) 
visit_generics			    fn visit_generics(&mut self, generics: &'l ast::Generics) 
visit_item			    fn visit_item(&mut self, item: &'l ast::Item) 
visit_local			    fn visit_local(&mut self, l: &'l ast::Local) 
visit_mac			    fn visit_mac(&mut self, mac: &'l ast::Mac) 
visit_mod			    fn visit_mod(&mut self, m: &'l ast::Mod, span: Span, attrs: &[ast::Attribute], id: NodeId) 
visit_pat			    fn visit_pat(&mut self, p: &'l ast::Pat) 
visit_pat			    fn visit_pat(&mut self, p: &ast::Pat) 
visit_path			    fn visit_path(&mut self, p: &'l ast::Path, id: NodeId) 
visit_stmt			    fn visit_stmt(&mut self, s: &'l ast::Stmt) 
visit_ty			    fn visit_ty(&mut self, t: &'l ast::Ty) 
with_callback			    pub fn with_callback(callback: &'b mut FnMut(&Analysis)) -> JsonDumper<CallbackOutput<'b>> 
write_sub_path_trait_truncated			    fn write_sub_path_trait_truncated(&mut self, path: &ast::Path) 
write_sub_paths			    fn write_sub_paths(&mut self, path: &ast::Path) 
write_sub_paths_truncated			    fn write_sub_paths_truncated(&mut self, path: &ast::Path) 
